keycloak:
  image:
    tag: 16.1.1-debian-10-r103
  auth:
    adminUser: admin
    existingSecret: sharedidp-keycloak
  proxyAddressForwarding: true
  serviceDiscovery:
    enabled: true
  ## TODO: KEYCLOAK_DATABASE_HOST needs to be overwritten in case of mode "replication"
  extraEnvVars:
    - name: KEYCLOAK_USER
      value: "admin"
    - name: KEYCLOAK_PASSWORD
      valueFrom:
        secretKeyRef:
          name: sharedidp-keycloak
          key: admin-password
    - name: CACHE_OWNERS_COUNT
      value: "3"
    - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
      value: "3"
    - name: KEYCLOAK_EXTRA_ARGS
      value: "-Dkeycloak.migration.action=import -Dkeycloak.migration.provider=dir -Dkeycloak.migration.dir=/realms -Dkeycloak.migration.strategy=OVERWRITE_EXISTING"
  replicaCount: 3
  extraVolumes:
    - name: themes
      emptyDir: {}
    - name: realms
      emptyDir: {}
    - name: realm-secrets
      secret:
        secretName: secret-sharedidp-realms
  extraVolumeMounts:
    - name: themes
      mountPath: "/opt/bitnami/keycloak/themes/catenax-shared"
    - name: realms
      mountPath: "/realms"
    - name: realm-secrets
      mountPath: "/secrets"
  initContainers:
    - name: import
      image: ghcr.io/catenax-ng/product-portal-iam_iam-import-int:latest
      imagePullPolicy: Always
      command:
        - sh
      args:
        - -c
        - |
          echo "Copying themes..."
          cp -R /import/themes/catenax-shared/* /themes
          echo "Copying realms..."
          cp -R /import/catenax-shared/realms/* /realms
          echo "Copying realms-secrets..."
          cp /secrets/* /realms
      volumeMounts:
      - name: themes
        mountPath: "/themes"
      - name: realms
        mountPath: "/realms"
      - name: realm-secrets
        mountPath: "/secrets"
  service:
    type: ClusterIP
    sessionAffinity: ClientIP
  ingress:
    enabled: true
    ingressClassName: nginx
    hostname: sharedidpnew.int.demo.catena-x.net
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
      nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS
      nginx.ingress.kubernetes.io/cors-allow-origin: https://sharedidp.int.demo.catena-x.net, http://localhost:3000
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
      nginx.ingress.kubernetes.io/proxy-buffering: "on"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "20"
      nginx.ingress.kubernetes.io/use-regex: "true"
    tls: true
  rbac:
    create: true
    rules:
      - apiGroups:
          - ""
        resources:
          - pods
        verbs:
          - get
          - list
  postgresql:
    enabled: true
    auth:
      username: kcshared
      database: iamsharedidp
      existingSecret: sharedidp-postgres
    architecture: replication

secrets:
  auth:
    existingSecret:
      path: portal/data/int/iam/sharedidp-keycloak
  extraVolumes:
    secret:
      path: portal/data/int/iam/sharedidp-realms
  postgresql:
    auth:
      existingSecret:
        path: portal/data/int/iam/sharedidp-postgres
