keycloak:
  initContainers:
    - name: import
      image: ghcr.io/catenax-ng/product-portal-iam_iam-import-dev:latest
      imagePullPolicy: Always
      command:
        - sh
      args:
        - -c
        - |
          echo "Copying themes..."
          cp -R /import/themes/catenax-central/* /themes
          echo "Copying realms..."
          cp -R /import/catenax-central/realms/* /realms
          echo "Copying realms-secrets..."
          cp /secrets/* /realms
      volumeMounts:
      - name: themes
        mountPath: "/themes"
      - name: realms
        mountPath: "/realms"
      - name: realm-secrets
        mountPath: "/secrets"

  ingress:
    enabled: true
    ingressClassName: nginx
    hostname: centralidp.dev.demo.catena-x.net
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
      nginx.ingress.kubernetes.io/cors-allow-methods: PUT, GET, POST, OPTIONS
      nginx.ingress.kubernetes.io/cors-allow-origin: https://centralidp.dev.demo.catena-x.net, http://localhost:3000
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/proxy-buffer-size: 128k
      nginx.ingress.kubernetes.io/proxy-buffering: "on"
      nginx.ingress.kubernetes.io/proxy-buffers-number: "20"
      nginx.ingress.kubernetes.io/use-regex: "true"
    tls: true

secrets:
  auth:
    existingSecret:
      path: portal/data/dev/iam/centralidp-keycloak
  extraVolumes:
    secret:
      path: portal/data/dev/iam/centralidp-realms
  postgresql:
    auth:
      existingSecret:
        path: portal/data/dev/iam/centralidp-postgres
