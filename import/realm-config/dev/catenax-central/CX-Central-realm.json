{
  "id": "CX-Central",
  "realm": "CX-Central",
  "displayName": "Catena-X Central",
  "notBefore": 0,
  "defaultSignatureAlgorithm": "RS256",
  "revokeRefreshToken": true,
  "refreshTokenMaxReuse": 1,
  "accessTokenLifespan": 300,
  "accessTokenLifespanForImplicitFlow": 900,
  "ssoSessionIdleTimeout": 1800,
  "ssoSessionMaxLifespan": 36000,
  "ssoSessionIdleTimeoutRememberMe": 0,
  "ssoSessionMaxLifespanRememberMe": 0,
  "offlineSessionIdleTimeout": 2592000,
  "offlineSessionMaxLifespanEnabled": false,
  "offlineSessionMaxLifespan": 5184000,
  "clientSessionIdleTimeout": 0,
  "clientSessionMaxLifespan": 0,
  "clientOfflineSessionIdleTimeout": 0,
  "clientOfflineSessionMaxLifespan": 0,
  "accessCodeLifespan": 60,
  "accessCodeLifespanUserAction": 300,
  "accessCodeLifespanLogin": 1800,
  "actionTokenGeneratedByAdminLifespan": 43200,
  "actionTokenGeneratedByUserLifespan": 300,
  "oauth2DeviceCodeLifespan": 600,
  "oauth2DevicePollingInterval": 5,
  "enabled": true,
  "sslRequired": "external",
  "registrationAllowed": false,
  "registrationEmailAsUsername": false,
  "rememberMe": false,
  "verifyEmail": false,
  "loginWithEmailAllowed": false,
  "duplicateEmailsAllowed": true,
  "resetPasswordAllowed": false,
  "editUsernameAllowed": false,
  "bruteForceProtected": true,
  "permanentLockout": false,
  "maxFailureWaitSeconds": 900,
  "minimumQuickLoginWaitSeconds": 60,
  "waitIncrementSeconds": 60,
  "quickLoginCheckMilliSeconds": 1000,
  "maxDeltaTimeSeconds": 43200,
  "failureFactor": 10,
  "roles": {
    "realm": [
      {
        "id": "9ed742fe-ac2e-462c-ab1f-09895db556b6",
        "name": "uma_authorization",
        "description": "${role_uma_authorization}",
        "composite": false,
        "clientRole": false,
        "containerId": "CX-Central",
        "attributes": {}
      },
      {
        "id": "fd7248cf-7b65-4dbf-ae84-7a967e8ec7c2",
        "name": "user",
        "description": "basic user",
        "composite": false,
        "clientRole": false,
        "containerId": "CX-Central",
        "attributes": {}
      },
      {
        "id": "4c19f2aa-f9b9-473e-ba5c-46c2f4e52c8b",
        "name": "default-roles-catena-x realm",
        "description": "${role_default-roles}",
        "composite": true,
        "composites": {
          "realm": [
            "offline_access",
            "uma_authorization"
          ],
          "client": {
            "realm-management": [
              "manage-users",
              "view-clients"
            ],
            "account": [
              "manage-account",
              "view-profile"
            ]
          }
        },
        "clientRole": false,
        "containerId": "CX-Central",
        "attributes": {}
      },
      {
        "id": "1ec798aa-cd95-43bd-9494-b1883e451fbb",
        "name": "offline_access",
        "description": "${role_offline-access}",
        "composite": false,
        "clientRole": false,
        "containerId": "CX-Central",
        "attributes": {}
      }
    ],
    "client": {
      "sa-cl6-cx-10": [],
      "sa-cl6-cx-4": [],
      "sa-cl6-cx-11": [],
      "sa-cl6-cx-3": [],
      "sa-cl6-cx-12": [],
      "sa-cl6-cx-2": [],
      "sa-cl6-cx-1": [],
      "sa-cl6-cx-13": [],
      "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com": [
        {
          "id": "b5cd89fe-42b2-41b9-b570-82445eb19900",
          "name": "app_CatenaXUser",
          "composite": false,
          "clientRole": true,
          "containerId": "2c5d3cb8-c718-4c8b-b48f-d6f628616c5d",
          "attributes": {}
        }
      ],
      "sa-cl6-cx-8": [],
      "sa-cl6-cx-7": [],
      "sa-cl6-cx-6": [],
      "security-admin-console": [],
      "sa-cl6-cx-5": [],
      "account-console": [],
      "Cl2-CX-Portal": [
        {
          "id": "39ff444c-888a-4bf6-b8e1-343b66f8a067",
          "name": "decline_new_partner",
          "description": "User can decline a partner application",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "cbf9e4ee-77f1-4310-b461-67995552324e",
          "name": "view_submitted_applications",
          "description": "Users with this right can view submitted applications and the respective application status",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "c6e35f9f-f7c0-4899-9ce6-7cce7ea79304",
          "name": "approve_new_partner",
          "description": "User with this right can let new partners access the portal by approving the company registration request inside the admin board",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "0769d6ca-3056-42da-84cd-35f2d535d79e",
          "name": "delete_connectors",
          "description": "Delete company connectors",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "33f6a6c1-06a2-4a0a-9c1d-a5036b8d6db1",
          "name": "FE Developer",
          "composite": true,
          "composites": {
            "client": {
              "Cl2-CX-Portal": [
                "add_app",
                "view_client_roles",
                "modify_user_account",
                "add_user_account",
                "invite_new_partner",
                "filter_apps",
                "developer_view",
                "edit_apps",
                "delete_apps",
                "view_apps",
                "view_user_management",
                "setup_idp"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "67ac93fa-6616-466a-b1db-5293b13c15bb",
          "name": "view_technical_setup",
          "description": "Users with this right can setup EDC /IDP/etc.",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "c4f0df0b-3c64-48a4-ae61-8fd6b22b622b",
          "name": "Data Specialist",
          "composite": true,
          "composites": {
            "client": {
              "Cl2-CX-Portal": [
                "view_apps"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "a34170d5-779d-489b-b2bb-e1b99b88b638",
          "name": "view_tech_user_management",
          "description": "View technical users",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "5998f67b-b190-443d-ab9b-3e76bbd73cab",
          "name": "add_user_account",
          "description": "Users with this right can add user accounts under their CX company",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "4d1ca50b-8a6e-47ee-9a9b-ed5a919bc0d5",
          "name": "invite_new_partner",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "a029dec3-8c6a-4a2f-a60a-82249f0590fd",
          "name": "setup_client",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "5654ef02-0b23-422e-8eb3-7bd95778db8f",
          "name": "IT Admin",
          "composite": true,
          "composites": {
            "client": {
              "Cl4-CX-DigitalTwin": [
                "add_digital_twin",
                "view_digital_twin",
                "update_digital_twin",
                "delete_digital_twin"
              ],
              "Cl2-CX-Portal": [
                "add_tech_user_management",
                "view_technical_setup",
                "view_tech_user_management",
                "add_user_account",
                "view_user_account",
                "setup_idp",
                "delete_tech_user_management",
                "modify_user_account",
                "my_user_account",
                "view_apps",
                "view_user_management"
              ],
              "Cl3-CX-Semantic": [
                "add_semantic_model",
                "update_semantic_model",
                "view_semantic_model",
                "delete_semantic_model"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "4f2b58a5-0ebd-4b91-b354-4fefd40cc811",
          "name": "delete_apps",
          "description": "User with this role can delete apps published in the Marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "da21c8b2-8ae2-406e-b8a6-272dfa0a1fbb",
          "name": "Developer",
          "composite": true,
          "composites": {
            "client": {
              "Cl2-CX-Portal": [
                "add_app",
                "filter_apps",
                "view_apps"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "496ae7df-fabd-4977-bb81-d6eb96ad81ed",
          "name": "CX User",
          "composite": true,
          "composites": {
            "client": {
              "Cl4-CX-DigitalTwin": [
                "view_digital_twin"
              ],
              "Cl3-CX-Semantic": [
                "view_semantic_model"
              ],
              "Cl2-CX-Portal": [
                "filter_apps",
                "my_user_account",
                "view_apps",
                "view_user_management",
                "view_partner_network"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "c41486f4-86d3-4b9b-9fb0-ceeaaf718268",
          "name": "modify_user_account",
          "description": "Users with this right can modify users related to their company",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "5c0d11f9-a90d-4960-9917-450b70b419f2",
          "name": "Business Admin",
          "composite": true,
          "composites": {
            "client": {
              "Cl2-CX-Portal": [
                "modify_user_account",
                "add_user_account",
                "filter_apps",
                "view_apps",
                "subscribe_apps"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "37dc74e9-9f50-49d2-9b95-402b04aa84ff",
          "name": "add_connectors",
          "description": "Add new connector (registration and self-description)",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "5ed3197b-1aa0-4e09-8eb2-c4097d44e9c7",
          "name": "developer_view",
          "description": "The user with this permission can see UI pages under development and not yet released to the public",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "1d12d087-bcaf-4ad5-b21f-77fdce13b423",
          "name": "view_user_management",
          "description": "Users with this right can access the user management in CX",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "51e6dede-686f-43d5-925a-693784f8a661",
          "name": "subscribe_apps",
          "description": "User is able to start the app subscription process",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "146c2388-2e26-4505-b85d-6824a4f80a2e",
          "name": "add_tech_user_management",
          "description": "Create / request technical users for my org",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "d5972ffe-2557-4143-8701-a08754b1eb38",
          "name": "add_app",
          "description": "Users with this role can publish new apps in the Marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "b8f170a7-aec4-4a0d-94a4-425a8248c232",
          "name": "Technical User Semantic & Digital Twin",
          "composite": true,
          "composites": {
            "client": {
              "Cl4-CX-DigitalTwin": [
                "add_digital_twin",
                "view_digital_twin",
                "delete_digital_twin",
                "update_digital_twin"
              ],
              "Cl3-CX-Semantic": [
                "view_semantic_model",
                "delete_semantic_model",
                "add_semantic_model",
                "update_semantic_model"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "f42c35ab-9a75-4be8-9c7d-3ca39a156eba",
          "name": "view_user_account",
          "description": "Users with this role can view the user account of others",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "9f5b48bf-4fc2-4feb-8c4e-00b57f5f2bed",
          "name": "filter_apps",
          "description": "Users with this role can filter apps in the App Marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "d9cdf5af-47c4-46c7-b4ab-dddd4b4a4aa0",
          "name": "Data Specialist (INT only)",
          "description": "Only a INT user with extended rights",
          "composite": true,
          "composites": {
            "client": {
              "Cl4-CX-DigitalTwin": [
                "add_digital_twin",
                "view_digital_twin",
                "delete_digital_twin",
                "update_digital_twin"
              ],
              "Cl3-CX-Semantic": [
                "view_semantic_model",
                "delete_semantic_model",
                "add_semantic_model",
                "update_semantic_model"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "0de2c803-1130-4ebf-9dfb-5016aadb9ca2",
          "name": "setup_idp",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "7b816094-20e7-44fb-a45f-3ecb9d9d7157",
          "name": "CX Admin",
          "composite": true,
          "composites": {
            "client": {
              "Cl4-CX-DigitalTwin": [
                "view_digital_twin",
                "update_digital_twin",
                "delete_digital_twin",
                "add_digital_twin"
              ],
              "Cl2-CX-Portal": [
                "decline_new_partner",
                "view_submitted_applications",
                "approve_new_partner",
                "delete_connectors",
                "view_technical_setup",
                "view_tech_user_management",
                "add_user_account",
                "invite_new_partner",
                "setup_client",
                "delete_apps",
                "modify_user_account",
                "add_connectors",
                "view_user_management",
                "subscribe_apps",
                "add_tech_user_management",
                "add_app",
                "view_user_account",
                "filter_apps",
                "setup_idp",
                "view_client_roles",
                "delete_tech_user_management",
                "my_user_account",
                "edit_apps",
                "view_apps",
                "view_connectors",
                "view_partner_network"
              ],
              "Cl3-CX-Semantic": [
                "add_semantic_model",
                "update_semantic_model",
                "view_semantic_model",
                "delete_semantic_model"
              ]
            }
          },
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "4ac0c3dc-1401-4ed6-a5f8-d8e08e2f5c78",
          "name": "delete_tech_user_management",
          "description": "Delete a technical user",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "6560b255-cbc6-4fb7-8afe-d61732e34ab1",
          "name": "view_client_roles",
          "description": "Users with this right can view the client roles of an app",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "99a8940c-0fbc-4f65-8134-4b598c3aabbc",
          "name": "my_user_account",
          "description": "view my own user account details",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "13fe64aa-6de6-4b94-9e3d-af9b2c7f2917",
          "name": "edit_apps",
          "description": "Users with this role can edit apps which are published in the marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "817fa189-808e-465c-b75d-838336ab7a84",
          "name": "view_apps",
          "description": "Users with this role can view apps in the App Marketplace",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "e5ec6a66-8fad-4066-bcdd-92041f894831",
          "name": "view_connectors",
          "description": "Look up company connectors and their details",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        },
        {
          "id": "104c094b-eaf5-4b0e-9758-f14dedf925da",
          "name": "view_partner_network",
          "description": "Partner Network view",
          "composite": false,
          "clientRole": true,
          "containerId": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
          "attributes": {}
        }
      ],
      "Cl11-ADAC-Fleet": [
        {
          "id": "95cea93b-ea55-4582-b70e-efc722ee462b",
          "name": "customer",
          "composite": false,
          "clientRole": true,
          "containerId": "e07fd69c-48ad-44d3-adb3-c42221a4921a",
          "attributes": {}
        },
        {
          "id": "4559a892-ff7f-48aa-a4d7-792a00c8937f",
          "name": "oem",
          "composite": false,
          "clientRole": true,
          "containerId": "e07fd69c-48ad-44d3-adb3-c42221a4921a",
          "attributes": {}
        },
        {
          "id": "37c2f367-f03f-4808-ab73-4c470f178625",
          "name": "admin",
          "composite": false,
          "clientRole": true,
          "containerId": "e07fd69c-48ad-44d3-adb3-c42221a4921a",
          "attributes": {}
        }
      ],
      "Cl7-CX-BPDM": [
        {
          "id": "a4829839-9df9-47c8-8eb0-57f4020000c3",
          "name": "add_company_data",
          "composite": false,
          "clientRole": true,
          "containerId": "04cd6d38-674f-4588-980a-8f120bddcc44",
          "attributes": {}
        }
      ],
      "Cl12-CX-TestManager": [],
      "admin-cli": [],
      "Cl8-CDQ-Fraud": [
        {
          "id": "1b1430b0-90f0-4425-83eb-89fb97f9c7bc",
          "name": "fraud_app_specialist",
          "composite": false,
          "clientRole": true,
          "containerId": "74642322-bf23-4a5f-a3c6-924714a54cd1",
          "attributes": {}
        },
        {
          "id": "6bb87c18-f681-4912-a8a8-40b66fcf5bae",
          "name": "fraud_app_manager",
          "composite": false,
          "clientRole": true,
          "containerId": "74642322-bf23-4a5f-a3c6-924714a54cd1",
          "attributes": {}
        }
      ],
      "sa-cl5-cx-1": [],
      "realm-management": [
        {
          "id": "aafa6845-0920-4013-a283-594c9dc7ac32",
          "name": "view-realm",
          "description": "${role_view-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "08811aa8-7a05-489d-9f5e-bd51fd39fbc3",
          "name": "manage-realm",
          "description": "${role_manage-realm}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "172dbf29-cc79-438f-9f56-24d0941f04ea",
          "name": "impersonation",
          "description": "${role_impersonation}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "6ecdc37e-e84c-4b2f-b7f8-950ad361b831",
          "name": "manage-events",
          "description": "${role_manage-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "3bc03769-6258-4202-9f83-2f9f33821ccb",
          "name": "view-users",
          "description": "${role_view-users}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-users",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "93db5b47-913a-4c45-a227-33f0b5c90701",
          "name": "create-client",
          "description": "${role_create-client}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "8cce49c4-c187-4573-ad0d-fddabc764ab3",
          "name": "view-events",
          "description": "${role_view-events}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "a2621233-2118-44ef-aa5b-c1c75854e395",
          "name": "query-clients",
          "description": "${role_query-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "fa001419-f155-4709-af5a-7753fa0d5798",
          "name": "view-identity-providers",
          "description": "${role_view-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "257abe39-01cd-44d1-96c3-e179d83effb6",
          "name": "manage-users",
          "description": "${role_manage-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "ad4b404c-de7f-4224-bb64-fc132a6c54c1",
          "name": "realm-admin",
          "description": "${role_realm-admin}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "view-realm",
                "manage-realm",
                "impersonation",
                "manage-events",
                "view-users",
                "create-client",
                "view-events",
                "query-clients",
                "view-identity-providers",
                "manage-users",
                "query-realms",
                "manage-identity-providers",
                "view-authorization",
                "view-clients",
                "manage-authorization",
                "query-users",
                "manage-clients",
                "query-groups"
              ]
            }
          },
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "13ba5952-cd79-4aea-9511-0741b2578980",
          "name": "query-realms",
          "description": "${role_query-realms}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "9842d196-88db-4df8-9c99-e383fa2e1b95",
          "name": "manage-identity-providers",
          "description": "${role_manage-identity-providers}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "14d19c59-046b-4772-8c2d-9dc1ccc82f46",
          "name": "view-authorization",
          "description": "${role_view-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "01feddbc-f742-42a9-ba3c-64f8ac2d5ba3",
          "name": "view-clients",
          "description": "${role_view-clients}",
          "composite": true,
          "composites": {
            "client": {
              "realm-management": [
                "query-clients"
              ]
            }
          },
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "f36cf8ec-3f54-4df5-80e6-36b44c0b1803",
          "name": "manage-authorization",
          "description": "${role_manage-authorization}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "b0c29452-6401-4f9d-a808-25b861c19006",
          "name": "query-users",
          "description": "${role_query-users}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "acf55e28-5dad-462b-abf5-51f598a7b8e8",
          "name": "manage-clients",
          "description": "${role_manage-clients}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        },
        {
          "id": "08547466-edfb-4676-9fb5-e4f4a6ee7363",
          "name": "query-groups",
          "description": "${role_query-groups}",
          "composite": false,
          "clientRole": true,
          "containerId": "213ea3ce-b036-405f-8abd-3ee08ff72857",
          "attributes": {}
        }
      ],
      "Cl5-CX-Custodian": [
        {
          "id": "6a492dbf-0c98-4bf6-afb1-e1ba4244f851",
          "name": "access",
          "composite": false,
          "clientRole": true,
          "containerId": "e6ab12bb-3b26-472c-ad0b-3d871bd1461b",
          "attributes": {}
        }
      ],
      "Cl1-CX-Registration": [
        {
          "id": "9607136e-9daf-4057-9274-767d4de473ab",
          "name": "add_company_data",
          "description": "User is able to add / edit company data under the registration process",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "b1b1e25d-0e14-4fc0-882a-126f3f6cbbc0",
          "name": "view_registration",
          "description": "Permission to access & view the registration process",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "fd523149-5499-412d-82b0-d8aeccbb5c5e",
          "name": "Company Admin",
          "composite": true,
          "composites": {
            "client": {
              "Cl1-CX-Registration": [
                "add_company_data",
                "view_registration",
                "submit_registration",
                "sign_consent",
                "upload_documents",
                "invite_user"
              ]
            }
          },
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "e5f03bf6-0b3c-4539-8873-d146bd18e504",
          "name": "CX Admin",
          "composite": true,
          "composites": {
            "client": {
              "Cl1-CX-Registration": [
                "add_company_data",
                "view_registration",
                "submit_registration",
                "sign_consent",
                "upload_documents",
                "invite_user"
              ]
            }
          },
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "086cf0b0-7181-4a8a-89d3-137fd02e0847",
          "name": "submit_registration",
          "description": "User is able to submit the registration to Catena-X",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "87ecd7bb-039a-4e0a-a1a8-ca17b32d7891",
          "name": "Signing Manager",
          "composite": true,
          "composites": {
            "client": {
              "Cl1-CX-Registration": [
                "add_company_data",
                "view_registration",
                "submit_registration",
                "sign_consent",
                "upload_documents",
                "invite_user"
              ]
            }
          },
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "e12709ce-c1fc-454a-a095-4088cab26539",
          "name": "sign_consent",
          "description": "User is able to confirm Terms & Conditions",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "009c93b3-8cb7-4961-9492-9d2fc9574583",
          "name": "upload_documents",
          "description": "User is able to upload documents in the registration service",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "461ea134-91cd-4482-a0cb-6f8406846807",
          "name": "Legal Manager",
          "composite": true,
          "composites": {
            "client": {
              "Cl1-CX-Registration": [
                "add_company_data",
                "view_registration",
                "submit_registration",
                "sign_consent",
                "upload_documents",
                "invite_user"
              ]
            }
          },
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        },
        {
          "id": "44d50090-3343-48d8-9843-7eeb15276869",
          "name": "invite_user",
          "description": "User is able to add additional users to the registration process",
          "composite": false,
          "clientRole": true,
          "containerId": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
          "attributes": {}
        }
      ],
      "broker": [
        {
          "id": "d1330d07-b783-43ad-b545-85a230060023",
          "name": "read-token",
          "description": "${role_read-token}",
          "composite": false,
          "clientRole": true,
          "containerId": "03885031-084a-4317-aa51-de9b4acf8fa9",
          "attributes": {}
        }
      ],
      "sa-clx-cx-1": [],
      "Cl3-CX-Semantic": [
        {
          "id": "beef62b1-2e1c-4fc2-8813-7f3981ebfde2",
          "name": "view_semantic_model",
          "description": "View existing data models",
          "composite": false,
          "clientRole": true,
          "containerId": "36e2745d-f331-4fa5-bbfa-90947d7f1dc4",
          "attributes": {}
        },
        {
          "id": "fa8261a8-fe09-4867-a558-438737917185",
          "name": "delete_semantic_model",
          "description": "User can delete existing semantic models",
          "composite": false,
          "clientRole": true,
          "containerId": "36e2745d-f331-4fa5-bbfa-90947d7f1dc4",
          "attributes": {}
        },
        {
          "id": "a46242a3-26db-4b86-b836-bf0339168c56",
          "name": "add_semantic_model",
          "description": "Add semantic model",
          "composite": false,
          "clientRole": true,
          "containerId": "36e2745d-f331-4fa5-bbfa-90947d7f1dc4",
          "attributes": {}
        },
        {
          "id": "f7d88948-b75d-4ed0-851d-b4c645ae27ca",
          "name": "update_semantic_model",
          "description": "User can update existing semantic models",
          "composite": false,
          "clientRole": true,
          "containerId": "36e2745d-f331-4fa5-bbfa-90947d7f1dc4",
          "attributes": {}
        }
      ],
      "sa-cl1-reg-2": [],
      "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com": [
        {
          "id": "13510549-38f2-45bb-9e55-9477e35951b7",
          "name": "CE.Dismantler.Purchase",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "8b14d5c3-2722-48d9-b24d-1195a8d3b7da",
          "name": "EC.Buyer.Manager",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "50f5d4d7-63d4-4447-addb-02771ac093c5",
          "name": "CE.Dismantler.Leader",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "7e9c6415-776c-4fe5-86d2-3999c7e7078e",
          "name": "CE.Dismantler.View",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        },
        {
          "id": "77edbd2b-d31d-428b-8f52-dc356e36c27f",
          "name": "EC.Buyer.buy",
          "composite": false,
          "clientRole": true,
          "containerId": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
          "attributes": {}
        }
      ],
      "Cl9-CDQ-Fraud": [
        {
          "id": "9f5d6884-a643-4846-bddc-39adeda9aef2",
          "name": "fraud_app_manager",
          "composite": false,
          "clientRole": true,
          "containerId": "3fbe1a86-143d-4d52-8138-01aa23875664",
          "attributes": {}
        },
        {
          "id": "2d7ea02b-114a-40d6-9c2c-ef57cc7eef67",
          "name": "fraud_app_user",
          "composite": false,
          "clientRole": true,
          "containerId": "3fbe1a86-143d-4d52-8138-01aa23875664",
          "attributes": {}
        }
      ],
      "sa-cl5-custodian-1": [],
      "https://catenax-int-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com": [],
      "Cl4-CX-DigitalTwin": [
        {
          "id": "6188b8f4-5d2c-41c7-a841-83fb8328f1ba",
          "name": "add_digital_twin",
          "description": "Users with this role can add digital twins in the digital twin registry",
          "composite": false,
          "clientRole": true,
          "containerId": "0dec1120-c21e-42ad-a779-94fc36217072",
          "attributes": {}
        },
        {
          "id": "7da8c3a4-faed-429e-945c-52ba37dbf9c7",
          "name": "view_digital_twin",
          "description": "Users with this role can view the digital twin registry in the Portal",
          "composite": false,
          "clientRole": true,
          "containerId": "0dec1120-c21e-42ad-a779-94fc36217072",
          "attributes": {}
        },
        {
          "id": "ecef749d-a16e-4bf3-914d-76a3f10fd892",
          "name": "delete_digital_twin",
          "description": "Users with this role can delete digital twins in the digital twin registry",
          "composite": false,
          "clientRole": true,
          "containerId": "0dec1120-c21e-42ad-a779-94fc36217072",
          "attributes": {}
        },
        {
          "id": "8543775d-2359-41cf-8bfe-cc78c12ba841",
          "name": "update_digital_twin",
          "description": "Users with this role can update digital twins in the digital twin registry",
          "composite": false,
          "clientRole": true,
          "containerId": "0dec1120-c21e-42ad-a779-94fc36217072",
          "attributes": {}
        }
      ],
      "sa-cl6-cx-9": [],
      "account": [
        {
          "id": "9a1e745f-e0b5-4efc-9336-3ba403a79cb8",
          "name": "manage-consent",
          "description": "${role_manage-consent}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "view-consent"
              ]
            }
          },
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        },
        {
          "id": "93070949-280d-4183-9761-94792722cc1d",
          "name": "delete-account",
          "description": "${role_delete-account}",
          "composite": false,
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        },
        {
          "id": "20d5e725-3d3b-4bfe-9a62-5e650ae55b53",
          "name": "manage-account",
          "description": "${role_manage-account}",
          "composite": true,
          "composites": {
            "client": {
              "account": [
                "manage-account-links"
              ]
            }
          },
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        },
        {
          "id": "d0312a58-8fba-4fea-9a07-bd5e1515f9d8",
          "name": "view-profile",
          "description": "${role_view-profile}",
          "composite": false,
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        },
        {
          "id": "1bc65f13-4eda-4954-9944-6699ec3913b3",
          "name": "manage-account-links",
          "description": "${role_manage-account-links}",
          "composite": false,
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        },
        {
          "id": "8b60326c-d508-4563-a41f-7973383d7501",
          "name": "view-applications",
          "description": "${role_view-applications}",
          "composite": false,
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        },
        {
          "id": "ef74a99a-0297-43c7-ae30-109c08a5aa69",
          "name": "view-consent",
          "description": "${role_view-consent}",
          "composite": false,
          "clientRole": true,
          "containerId": "60313b78-e131-4358-9817-163ee938cc59",
          "attributes": {}
        }
      ],
      "urn:uuid:7bd86018-d0a2-421b-9e00-b77bab0838b1": []
    }
  },
  "groups": [],
  "defaultRole": {
    "id": "4c19f2aa-f9b9-473e-ba5c-46c2f4e52c8b",
    "name": "default-roles-catena-x realm",
    "description": "${role_default-roles}",
    "composite": true,
    "clientRole": false,
    "containerId": "CX-Central"
  },
  "requiredCredentials": [
    "password"
  ],
  "otpPolicyType": "totp",
  "otpPolicyAlgorithm": "HmacSHA1",
  "otpPolicyInitialCounter": 0,
  "otpPolicyDigits": 6,
  "otpPolicyLookAheadWindow": 1,
  "otpPolicyPeriod": 30,
  "otpSupportedApplications": [
    "FreeOTP",
    "Google Authenticator"
  ],
  "webAuthnPolicyRpEntityName": "keycloak",
  "webAuthnPolicySignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyRpId": "",
  "webAuthnPolicyAttestationConveyancePreference": "not specified",
  "webAuthnPolicyAuthenticatorAttachment": "not specified",
  "webAuthnPolicyRequireResidentKey": "not specified",
  "webAuthnPolicyUserVerificationRequirement": "not specified",
  "webAuthnPolicyCreateTimeout": 0,
  "webAuthnPolicyAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyAcceptableAaguids": [],
  "webAuthnPolicyPasswordlessRpEntityName": "keycloak",
  "webAuthnPolicyPasswordlessSignatureAlgorithms": [
    "ES256"
  ],
  "webAuthnPolicyPasswordlessRpId": "",
  "webAuthnPolicyPasswordlessAttestationConveyancePreference": "not specified",
  "webAuthnPolicyPasswordlessAuthenticatorAttachment": "not specified",
  "webAuthnPolicyPasswordlessRequireResidentKey": "not specified",
  "webAuthnPolicyPasswordlessUserVerificationRequirement": "not specified",
  "webAuthnPolicyPasswordlessCreateTimeout": 0,
  "webAuthnPolicyPasswordlessAvoidSameAuthenticatorRegister": false,
  "webAuthnPolicyPasswordlessAcceptableAaguids": [],
  "users": [
    {
      "id": "593a16a6-cad2-464b-81cc-944255f930df",
      "createdTimestamp": 1651615023563,
      "username": "service-account-cl5-cx-custodian",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "Cl5-CX-Custodian",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl5-CX-Custodian": [
          "access"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "e69c1397-eee8-434a-b83b-dc7944bb9bdd",
      "createdTimestamp": 1651730911692,
      "username": "service-account-sa-cl1-reg-2",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl1-reg-2",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "6e9d388a-1a21-4196-8210-80e9a696ae87",
      "createdTimestamp": 1651615151516,
      "username": "service-account-sa-cl5-custodian-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl5-custodian-1",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl5-CX-Custodian": [
          "access"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "7dfe07ab-29fe-404b-8528-fa11bf608757",
      "createdTimestamp": 1652858406207,
      "username": "service-account-sa-cl5-cx-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl5-cx-1",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "22d4d18c-5e35-437d-8adc-4b47dca71cc2",
      "createdTimestamp": 1651729631982,
      "username": "service-account-sa-cl6-cx-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-1",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "d127fde5-1645-4e8f-be89-fd3ca7ef156c",
      "createdTimestamp": 1652049343884,
      "username": "service-account-sa-cl6-cx-10",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-10",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "50eadaf8-9ef9-43b0-93cd-70dbc02124bd",
      "createdTimestamp": 1652049455795,
      "username": "service-account-sa-cl6-cx-11",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-11",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "a944c2da-d846-47dc-a72a-92573f450ec1",
      "createdTimestamp": 1652221234622,
      "username": "service-account-sa-cl6-cx-12",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-12",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl4-CX-DigitalTwin": [
          "add_digital_twin",
          "view_digital_twin",
          "update_digital_twin"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model",
          "add_semantic_model",
          "update_semantic_model"
        ],
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "f593ea3d-111d-4b27-b081-321e6b19a844",
      "createdTimestamp": 1652418651244,
      "username": "service-account-sa-cl6-cx-13",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-13",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl4-CX-DigitalTwin": [
          "add_digital_twin",
          "view_digital_twin",
          "delete_digital_twin",
          "update_digital_twin"
        ],
        "Cl3-CX-Semantic": [
          "view_semantic_model",
          "delete_semantic_model",
          "add_semantic_model",
          "update_semantic_model"
        ],
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "d6df2c49-804c-4b3e-afa5-b286c73d2428",
      "createdTimestamp": 1651729457029,
      "username": "service-account-sa-cl6-cx-2",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-2",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "98d03ed3-02e2-4643-81c4-a011f0d47a6d",
      "createdTimestamp": 1651729671532,
      "username": "service-account-sa-cl6-cx-3",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-3",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "50c19120-550c-429a-b45c-fb402046d4be",
      "createdTimestamp": 1651729685848,
      "username": "service-account-sa-cl6-cx-4",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-4",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "6d0098ce-e569-4bff-a61e-c721dd7d5da7",
      "createdTimestamp": 1651729695554,
      "username": "service-account-sa-cl6-cx-5",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-5",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "330c164f-98db-4566-8135-e45e3ec1d0f3",
      "createdTimestamp": 1651729708123,
      "username": "service-account-sa-cl6-cx-6",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-6",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "bf30770f-5d23-40d7-a2ca-328af0f12d7d",
      "createdTimestamp": 1651729718857,
      "username": "service-account-sa-cl6-cx-7",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-7",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "b0297640-9074-4003-adb9-cbf9f23409a7",
      "createdTimestamp": 1651729730658,
      "username": "service-account-sa-cl6-cx-8",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-8",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "2c5e74e2-0561-46f9-b27e-beadb44f1f75",
      "createdTimestamp": 1651613503558,
      "username": "service-account-sa-cl6-cx-9",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-cl6-cx-9",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    },
    {
      "id": "2da67801-addd-4acb-a6b5-71a82ca050d1",
      "createdTimestamp": 1651730995929,
      "username": "service-account-sa-clx-cx-1",
      "enabled": true,
      "totp": false,
      "emailVerified": false,
      "serviceAccountClientId": "sa-clx-cx-1",
      "disableableCredentialTypes": [],
      "requiredActions": [],
      "realmRoles": [
        "default-roles-catena-x realm"
      ],
      "clientRoles": {
        "Cl2-CX-Portal": [
          "Technical User Semantic & Digital Twin"
        ]
      },
      "notBefore": 0,
      "groups": []
    }
  ],
  "scopeMappings": [
    {
      "clientScope": "offline_access",
      "roles": [
        "offline_access"
      ]
    }
  ],
  "clientScopeMappings": {
    "account": [
      {
        "client": "account-console",
        "roles": [
          "manage-account"
        ]
      }
    ]
  },
  "clients": [
    {
      "id": "60313b78-e131-4358-9817-163ee938cc59",
      "clientId": "account",
      "name": "${client_account}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/CX-Central/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/CX-Central/account/*",
        "https://centralidp.int.demo.catena-x.net/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "saml.server.signature": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "edb1e627-426a-4593-93c0-e9b4bc45c4d6",
      "clientId": "account-console",
      "name": "${client_account-console}",
      "rootUrl": "${authBaseUrl}",
      "baseUrl": "/realms/CX-Central/account/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/realms/CX-Central/account/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "saml.server.signature": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "pkce.code.challenge.method": "S256",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "62ea7826-6e5b-4200-8f5b-ff69b672d0a3",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "dc24237b-46fa-418b-a806-24d371e4385a",
          "name": "idp mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "idp",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "tenant",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "38d072af-d85b-4b39-ad55-13ed5ce45791",
      "clientId": "admin-cli",
      "name": "${client_admin-cli}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": false,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "03885031-084a-4317-aa51-de9b4acf8fa9",
      "clientId": "broker",
      "name": "${client_broker}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e07fd69c-48ad-44d3-adb3-c42221a4921a",
      "clientId": "Cl11-ADAC-Fleet",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:8080/*",
        "https://dtc-translator.adac.openresearch.com/*",
        "https://fleet-management.adac.openresearch.com/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "367fc1b7-4b13-4d8e-8090-e7463b18a295",
          "name": "organisation-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "organisation",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organisation",
            "jsonType.label": "String"
          }
        },
        {
          "id": "52ef5f31-c541-45bd-b4c4-8fbf6f74e0bd",
          "name": "tenant-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "tenant",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "tenant",
            "jsonType.label": "String"
          }
        },
        {
          "id": "39b09e63-d335-42e3-a8e1-37ca2101f146",
          "name": "audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "Cl11-ADAC-Fleet",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2a82462c-5745-43bb-859c-f5a2e74611de",
      "clientId": "Cl12-CX-TestManager",
      "name": "Testdaten-Manager",
      "description": "Testdaten Manager SSO",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fcc06fed-6259-4a49-8e1b-e7eae940145e",
      "clientId": "Cl1-CX-Registration",
      "rootUrl": "",
      "adminUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:3000/*",
        "https://portal.int.demo.catena-x.net/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "saml.server.signature": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "71f9d485-62aa-41c2-a491-bcb47c447121",
          "name": "idp mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "tenant",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "tenant",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4c180350-8f09-4eed-88f4-4b003a6b5fd1",
          "name": "organisation-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "organisation",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organisation",
            "jsonType.label": "String"
          }
        },
        {
          "id": "2b1dfde9-aff2-406b-b258-edbf574fc4dd",
          "name": "audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "Cl1-CX-Registration",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e0806293-f9b3-44f1-a6d0-4e4406787f80",
      "clientId": "Cl2-CX-Portal",
      "name": "",
      "description": "",
      "rootUrl": "https://portal.int.demo.catena-x.net/home",
      "adminUrl": "",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:8080/*",
        "http://localhost:3000/*",
        "https://catenax-bpdm-int.demo.catena-x.net/*",
        "https://portal.int.demo.catena-x.net/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "35d0aa44-dd27-4dbd-8f3a-7047ae461fdd",
          "name": "catenax-registration audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "Cl1-CX-Registration",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "e97b646a-3753-4da5-b6f7-3a2860741b20",
          "name": "catenax-portal audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "Cl2-CX-Portal",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "catena",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "36e2745d-f331-4fa5-bbfa-90947d7f1dc4",
      "clientId": "Cl3-CX-Semantic",
      "rootUrl": "",
      "adminUrl": "https://portal.int.demo.catena-x.net/home",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:8080/*",
        "http://localhost:3000/*",
        "https://portal.int.demo.catena-x.net/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "1de1f28c-00d2-42b6-bc74-e57d8e73f7df",
          "name": "catenax-registration audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-registration",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "faf297ed-30d7-4e15-8051-40c540c14604",
          "name": "catenax-portal audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-portal",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "catena",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0dec1120-c21e-42ad-a779-94fc36217072",
      "clientId": "Cl4-CX-DigitalTwin",
      "rootUrl": "",
      "adminUrl": "https://portal.int.demo.catena-x.net/home",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "http://localhost:8080/*",
        "https://semantics.int.demo.catena-x.net/*",
        "http://localhost:3000/*",
        "https://portal.int.demo.catena-x.net/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "3974d007-3654-4798-a3dc-d22d0c98d482",
          "name": "catenax-registration audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-registration",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "714f381d-bc8c-47e7-aa8d-b0b357901eb0",
          "name": "catenax-portal audience-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-mapper",
          "consentRequired": false,
          "config": {
            "included.client.audience": "catenax-portal",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "catena",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e6ab12bb-3b26-472c-ad0b-3d871bd1461b",
      "clientId": "Cl5-CX-Custodian",
      "name": "Cl5-CX-Custodian INT",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://managed-identity-wallets.int.demo.catena-x.net/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "token.endpoint.auth.signing.alg": "RS256",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "6f273a17-cf91-43dc-9dac-4ec36250d133",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "7a4001a7-aeaf-419c-ae46-6a190bc5e13f",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9fd2abb2-445e-4622-a068-e3d48eb97634",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "roles"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "04cd6d38-674f-4588-980a-8f120bddcc44",
      "clientId": "Cl7-CX-BPDM",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://catenax-bpdm-int.demo.catena-x.net/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "74642322-bf23-4a5f-a3c6-924714a54cd1",
      "clientId": "Cl8-CDQ-Fraud",
      "name": "CDQ Fraud App",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://apps.cdq.com/signin/*",
        "https://keycloak-admin.staging.k8s.devops.cdq-cloud-engine.com/*",
        "https://keycloak-admin.staging.k8s.devops.cdq-cloud-engine.com/auth/*",
        "https://id.cdq.com/auth/*",
        "https://id.cdq.com/auth/realms/cs"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "3fbe1a86-143d-4d52-8138-01aa23875664",
      "clientId": "Cl9-CDQ-Fraud",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://keycloak.catenax-cdq.com/auth/*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c6386f0a-e946-4f09-9b9b-d6686c50195b",
      "clientId": "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com",
      "name": "Cl10-SAP-CE",
      "description": "SAP CE App - currently named as Circular Economy SAP (https://catenax-dt-rec.iam-prw.cfapps.eu10.hana.ondemand.com/cp.portal/site#Shell-home)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com/saml/SSO/alias/catenax-dt-rec.aws-live-eu10"
      ],
      "webOrigins": [
        "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.force.post.binding": "true",
        "saml.multivalued.roles": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "saml.signing.certificate": "MIIDIDCCAgigAwIBAgIGElXjqKNAMA0GCSqGSIb3DQEBCwUAMEcxRTBDBgNVBAMMPGh0dHBzOi8vY2F0ZW5heC1kdC1yZWMuYXV0aGVudGljYXRpb24uZXUxMC5oYW5hLm9uZGVtYW5kLmNvbTAgFw0xNjAxMDEwMDAwMDBaGA8yMDUwMDEwMTAwMDAwMFowRzFFMEMGA1UEAww8aHR0cHM6Ly9jYXRlbmF4LWR0LXJlYy5hdXRoZW50aWNhdGlvbi5ldTEwLmhhbmEub25kZW1hbmQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAubgGM9U3mgkLahIJ6M2LImFIcoLPXaCD+aw4hi68grZ89T5HGpqDtgxdvzVqnjJ1Qam0IUWRcu7XPACVOp6Ez3u2CzvjBlrW9gQbXbTl3urv8QTAmBDzO/F4tG0GInf5DyI6ln+HV6lgtCUEdBv9xmoGdlvM0rY1RTebmRU89kqL4NixdKDA5f7lt+geZZm+tQrxfpTapXRC5Bkg6b6TA5Hk4YhgiKfV/muuB9WJnhhovC8nqswqQEGm8+HZ9/7mPCG82x7z9I1c/XY2RR8JNxNd9UYgd87mdp3A395YZ121d2bI8gNDCEr+hirHFigH+F3oPs6Q4BwY/rvWnjVKfwIDAQABoxAwDjAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQAiiqpIbv8gsoPr2vnW1LSuWKp8nQHMpn6eWtqmbu3QRXKzcgNelveycWNWAT94Of0/qPsbtBTbzDSlj+wmh1sd8vBEfce5vsVAf2CfTC8djAKL8HFJSRPB1Hn49WfS+TflOo0B+8SGV51THQwJm7KdT9kNOaXJWuLgmOWY4q7JurTEbOzTke4OvWGy2Ag/uOaY6mxmoTcLLajOJQMTIXnLba+ggXLD4/4jWY1r3s5wzcwfTKcGigH2PpsPGmqjUPcM0Qh0UiD+UCiAgyAuOIRh1trpGXRJ3dBsC7y6W4hK0igU4zP4KpjLh1dLEgCnbUVI5dIlVVq0YQ6jj+TOGDBG",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "false",
        "saml.signature.algorithm": "RSA_SHA256",
        "client_credentials.use_refresh_token": "false",
        "saml.client.signature": "true",
        "require.pushed.authorization.requests": "false",
        "saml.assertion.signature": "true",
        "id.token.as.detached.signature": "false",
        "saml_single_logout_service_url_post": "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com/saml/SingleLogout/alias/catenax-dt-rec.aws-live-eu10",
        "saml.encrypt": "true",
        "saml_assertion_consumer_url_post": "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com/saml/SSO/alias/catenax-dt-rec.aws-live-eu10",
        "saml.server.signature": "true",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding.identifier": "2ci7fiekIgS7KD2EZj7CfJjNXoY=",
        "saml_single_logout_service_url_redirect": "https://catenax-dt-rec.authentication.eu10.hana.ondemand.com/saml/SingleLogout/alias/catenax-dt-rec.aws-live-eu10",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "saml.encryption.certificate": "MIIDIDCCAgigAwIBAgIGElXjqKNAMA0GCSqGSIb3DQEBCwUAMEcxRTBDBgNVBAMMPGh0dHBzOi8vY2F0ZW5heC1kdC1yZWMuYXV0aGVudGljYXRpb24uZXUxMC5oYW5hLm9uZGVtYW5kLmNvbTAgFw0xNjAxMDEwMDAwMDBaGA8yMDUwMDEwMTAwMDAwMFowRzFFMEMGA1UEAww8aHR0cHM6Ly9jYXRlbmF4LWR0LXJlYy5hdXRoZW50aWNhdGlvbi5ldTEwLmhhbmEub25kZW1hbmQuY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAubgGM9U3mgkLahIJ6M2LImFIcoLPXaCD+aw4hi68grZ89T5HGpqDtgxdvzVqnjJ1Qam0IUWRcu7XPACVOp6Ez3u2CzvjBlrW9gQbXbTl3urv8QTAmBDzO/F4tG0GInf5DyI6ln+HV6lgtCUEdBv9xmoGdlvM0rY1RTebmRU89kqL4NixdKDA5f7lt+geZZm+tQrxfpTapXRC5Bkg6b6TA5Hk4YhgiKfV/muuB9WJnhhovC8nqswqQEGm8+HZ9/7mPCG82x7z9I1c/XY2RR8JNxNd9UYgd87mdp3A395YZ121d2bI8gNDCEr+hirHFigH+F3oPs6Q4BwY/rvWnjVKfwIDAQABoxAwDjAMBgNVHRMBAf8EAjAAMA0GCSqGSIb3DQEBCwUAA4IBAQAiiqpIbv8gsoPr2vnW1LSuWKp8nQHMpn6eWtqmbu3QRXKzcgNelveycWNWAT94Of0/qPsbtBTbzDSlj+wmh1sd8vBEfce5vsVAf2CfTC8djAKL8HFJSRPB1Hn49WfS+TflOo0B+8SGV51THQwJm7KdT9kNOaXJWuLgmOWY4q7JurTEbOzTke4OvWGy2Ag/uOaY6mxmoTcLLajOJQMTIXnLba+ggXLD4/4jWY1r3s5wzcwfTKcGigH2PpsPGmqjUPcM0Qh0UiD+UCiAgyAuOIRh1trpGXRJ3dBsC7y6W4hK0igU4zP4KpjLh1dLEgCnbUVI5dIlVVq0YQ6jj+TOGDBG",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "true",
        "display.on.consent.screen": "false",
        "saml_name_id_format": "email",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "db86018e-b8d1-4b71-a377-ef3733201db7",
          "name": "X500 surname",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "lastName",
            "friendly.name": "surname",
            "attribute.name": "urn:oid:2.5.4.4"
          }
        },
        {
          "id": "4ea0328c-2a90-4202-935e-cf811d9a12aa",
          "name": "X500 givenName",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "firstName",
            "friendly.name": "givenName",
            "attribute.name": "urn:oid:2.5.4.42"
          }
        },
        {
          "id": "41421449-b7eb-42ef-8410-9b7506d4b709",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        },
        {
          "id": "99cd3fe6-148e-438b-8f06-1345bf6c7e62",
          "name": "X500 email",
          "protocol": "saml",
          "protocolMapper": "saml-user-property-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "urn:oasis:names:tc:SAML:2.0:attrname-format:uri",
            "user.attribute": "email",
            "friendly.name": "email",
            "attribute.name": "urn:oid:1.2.840.113549.1.9.1"
          }
        },
        {
          "id": "0ea4e3df-487f-475a-9945-3bf0849b99e1",
          "name": "organisation-mapper",
          "protocol": "saml",
          "protocolMapper": "saml-user-attribute-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "organisation",
            "attribute.name": "organisation"
          }
        },
        {
          "id": "5b964b1e-d4ef-4de4-a99f-0d03edd811d2",
          "name": "tenant-mapper",
          "protocol": "saml",
          "protocolMapper": "saml-user-attribute-mapper",
          "consentRequired": false,
          "config": {
            "attribute.nameformat": "Basic",
            "user.attribute": "tenant",
            "attribute.name": "tenant"
          }
        }
      ],
      "defaultClientScopes": [
        "role_list"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "6a9209c2-ec16-476b-9a9f-61474610b790",
      "clientId": "https://catenax-int-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://catenax-int-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com/saml/SSO/alias/catenax-int-dismantler-s66pftcc.aws-live-eu10"
      ],
      "webOrigins": [
        "https://catenax-int-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.assertion.signature": "true",
        "saml.force.post.binding": "true",
        "saml_single_logout_service_url_post": "https://catenax-int-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com/saml/SingleLogout/alias/catenax-int-dismantler-s66pftcc.aws-live-eu10",
        "saml.encrypt": "true",
        "saml_assertion_consumer_url_post": "https://catenax-int-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com/saml/SSO/alias/catenax-int-dismantler-s66pftcc.aws-live-eu10",
        "saml.server.signature": "true",
        "saml.server.signature.keyinfo.ext": "false",
        "saml.signing.certificate": "MIIDQjCCAiqgAwIBAgIGElXjqKNAMA0GCSqGSIb3DQEBCwUAMFgxVjBUBgNVBAMMTWh0dHBzOi8vY2F0ZW5heC1pbnQtZGlzbWFudGxlci1zNjZwZnRjYy5hdXRoZW50aWNhdGlvbi5ldTEwLmhhbmEub25kZW1hbmQuY29tMCAXDTE2MDEwMTAwMDAwMFoYDzIwNTAwMTAxMDAwMDAwWjBYMVYwVAYDVQQDDE1odHRwczovL2NhdGVuYXgtaW50LWRpc21hbnRsZXItczY2cGZ0Y2MuYXV0aGVudGljYXRpb24uZXUxMC5oYW5hLm9uZGVtYW5kLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKVD5SYVIsC3M8PqMuiw/IMypyZU0V5pUwxBaZlMWljz1D1iNPGaOg9LhhLGAWOD0cdfFs70Q4Ov391raGRn5/9cQma0dJtH1PiTMM67+FZFvn1FWeEJ5a3qwIgoQrcDZn9NDTmtL+yaYOAsg5SGEkjrOZlJp1U3xVZDmuToUZ96WDodsy/nVQTkvaORSh+XDPIQ3sH5jqFdFuQsWf3xXSFHobF1sbi2IjGSZxLEi9yszPVff999Q0Q86kAoCh5gVKdB3WSHgkzDD6gxlcIGGQM6y3HZigIKlPRwK1o3SrEvl0IbPKDNM6rtFgWwRfp5KsQLRfe7TxLq7IWkqQd29vcCAwEAAaMQMA4wDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQsFAAOCAQEAoScTGCrzKq4bbYFTJcyKwtgL80OM7RgZlfSsP/+k7fiZKUaY6WbUKDwRl7yHglgjL6NiC/Tz1PklgbB08RMwXIHbnG4VvdpcMUlHn5wGfZnNViHZYsjb4TgK8QS/zD8CSaJguUuK0ym/KUT9Hn6bHQuk4CQICVZmlp1N/bIWoSinY565rZ1amg9Ap0sgy1wWuqH8zKeTClrxjbuQeRTyj7d4kb/Ocg12rrUP8dznS5SGiR7WL9LpVrJZH72cKuOM1dYV6O94KH9uiuMe+VoUxWqgHiYbA/LOCxLSgI2fVTG8cGz0bCviFSf2tfVEB8mi/cU2Ikz6LzGNdaEpr4NoaA==",
        "saml.artifact.binding.identifier": "ZGMZhC4yxOKbOI3azIQQxCjXbLw=",
        "saml_single_logout_service_url_redirect": "https://catenax-int-dismantler-s66pftcc.authentication.eu10.hana.ondemand.com/saml/SingleLogout/alias/catenax-int-dismantler-s66pftcc.aws-live-eu10",
        "saml.signature.algorithm": "RSA_SHA256",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "true",
        "saml.encryption.certificate": "MIIDQjCCAiqgAwIBAgIGElXjqKNAMA0GCSqGSIb3DQEBCwUAMFgxVjBUBgNVBAMMTWh0dHBzOi8vY2F0ZW5heC1pbnQtZGlzbWFudGxlci1zNjZwZnRjYy5hdXRoZW50aWNhdGlvbi5ldTEwLmhhbmEub25kZW1hbmQuY29tMCAXDTE2MDEwMTAwMDAwMFoYDzIwNTAwMTAxMDAwMDAwWjBYMVYwVAYDVQQDDE1odHRwczovL2NhdGVuYXgtaW50LWRpc21hbnRsZXItczY2cGZ0Y2MuYXV0aGVudGljYXRpb24uZXUxMC5oYW5hLm9uZGVtYW5kLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAKVD5SYVIsC3M8PqMuiw/IMypyZU0V5pUwxBaZlMWljz1D1iNPGaOg9LhhLGAWOD0cdfFs70Q4Ov391raGRn5/9cQma0dJtH1PiTMM67+FZFvn1FWeEJ5a3qwIgoQrcDZn9NDTmtL+yaYOAsg5SGEkjrOZlJp1U3xVZDmuToUZ96WDodsy/nVQTkvaORSh+XDPIQ3sH5jqFdFuQsWf3xXSFHobF1sbi2IjGSZxLEi9yszPVff999Q0Q86kAoCh5gVKdB3WSHgkzDD6gxlcIGGQM6y3HZigIKlPRwK1o3SrEvl0IbPKDNM6rtFgWwRfp5KsQLRfe7TxLq7IWkqQd29vcCAwEAAaMQMA4wDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQsFAAOCAQEAoScTGCrzKq4bbYFTJcyKwtgL80OM7RgZlfSsP/+k7fiZKUaY6WbUKDwRl7yHglgjL6NiC/Tz1PklgbB08RMwXIHbnG4VvdpcMUlHn5wGfZnNViHZYsjb4TgK8QS/zD8CSaJguUuK0ym/KUT9Hn6bHQuk4CQICVZmlp1N/bIWoSinY565rZ1amg9Ap0sgy1wWuqH8zKeTClrxjbuQeRTyj7d4kb/Ocg12rrUP8dznS5SGiR7WL9LpVrJZH72cKuOM1dYV6O94KH9uiuMe+VoUxWqgHiYbA/LOCxLSgI2fVTG8cGz0bCviFSf2tfVEB8mi/cU2Ikz6LzGNdaEpr4NoaA==",
        "saml.authnstatement": "true",
        "saml_name_id_format": "email",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "role_list"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "2c5d3cb8-c718-4c8b-b48f-d6f628616c5d",
      "clientId": "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com/saml/SSO/alias/pt-demo-owner-1lusu8r1.aws-live-eu10"
      ],
      "webOrigins": [
        "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.force.post.binding": "true",
        "saml.multivalued.roles": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "saml.signing.certificate": "MIIDMDCCAhigAwIBAgIGElXjqKNAMA0GCSqGSIb3DQEBCwUAME8xTTBLBgNVBAMMRGh0dHBzOi8vcHQtZGVtby1vd25lci0xbHVzdThyMS5hdXRoZW50aWNhdGlvbi5ldTEwLmhhbmEub25kZW1hbmQuY29tMCAXDTE2MDEwMTAwMDAwMFoYDzIwNTAwMTAxMDAwMDAwWjBPMU0wSwYDVQQDDERodHRwczovL3B0LWRlbW8tb3duZXItMWx1c3U4cjEuYXV0aGVudGljYXRpb24uZXUxMC5oYW5hLm9uZGVtYW5kLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIqpBnFGA0I71WMMxq5LunHwgNbgNNRHZjWy6YPNW1uJjbSbVC1TgMlgbXi36tD8T3HG7/LzHpIYqqJGj9Qd+nCP+ThGa6Q8oy3x3ddJ4FoyPjiwVMElllLvEnv+4+8hOKJFiwRZfdLl+oCQEzHFtR3SbnvSFIJsBEn7zQrITlL91OtrNmm6j1nGs6cUi2zOXet98aZWsXB1p5FiM68JQzrq2crPgqVYNNzrxTJhZay7POgWKDmlm44ck5YOP3dtfkyCIGv63QmeXW+9IT6EWODrqFbaapXKCRS70FJLk2safXN0Hgqe3L+tv/vKYHqVCvsbFztnd9OEJVfDB+1IAQECAwEAAaMQMA4wDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQsFAAOCAQEAUm+aIfaismCLvfNCwU1nT422c+lfYlQnY/VndsihksddXZvbTLb0WXZ0+6NBvI9q0ZOee65mr7kNGGyvR52nSDxDoDCXRhHK4yNUbl6LVJ7ZNibif3ItmK+GaHilJ1oG/mi8ucvyTT+BGBsHfvjbB+RLSVzr/t0exhhmVHy/buR54efvmolBuWFggsUa2qeP2mXWmUHW4GptmniLbIIYClGzbG0QIDutcSmxqoxwlywS2PJerwAxgdjx3gcv49ZCTnFfL+ZTp78dpu4XjXbI0BNymJXDomCj4lpQPuqWsVKWrJh99e+pptUbpSzsBaQxJQmA3V32YLFEprEqB00q0Q==",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "false",
        "client_credentials.use_refresh_token": "false",
        "saml.signature.algorithm": "RSA_SHA256",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "true",
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "true",
        "saml_single_logout_service_url_post": "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com/saml/SingleLogout/alias/pt-demo-owner-1lusu8r1.aws-live-eu10",
        "saml.encrypt": "false",
        "saml_assertion_consumer_url_post": "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com/saml/SSO/alias/pt-demo-owner-1lusu8r1.aws-live-eu10",
        "saml.server.signature": "false",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding.identifier": "r91TMnkHpA3L0JRpDA+YsBpF+fg=",
        "saml.artifact.binding": "false",
        "saml_single_logout_service_url_redirect": "https://pt-demo-owner-1lusu8r1.authentication.eu10.hana.ondemand.com/saml/SingleLogout/alias/pt-demo-owner-1lusu8r1.aws-live-eu10",
        "saml_force_name_id_format": "false",
        "saml.encryption.certificate": "MIIDMDCCAhigAwIBAgIGElXjqKNAMA0GCSqGSIb3DQEBCwUAME8xTTBLBgNVBAMMRGh0dHBzOi8vcHQtZGVtby1vd25lci0xbHVzdThyMS5hdXRoZW50aWNhdGlvbi5ldTEwLmhhbmEub25kZW1hbmQuY29tMCAXDTE2MDEwMTAwMDAwMFoYDzIwNTAwMTAxMDAwMDAwWjBPMU0wSwYDVQQDDERodHRwczovL3B0LWRlbW8tb3duZXItMWx1c3U4cjEuYXV0aGVudGljYXRpb24uZXUxMC5oYW5hLm9uZGVtYW5kLmNvbTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBAIqpBnFGA0I71WMMxq5LunHwgNbgNNRHZjWy6YPNW1uJjbSbVC1TgMlgbXi36tD8T3HG7/LzHpIYqqJGj9Qd+nCP+ThGa6Q8oy3x3ddJ4FoyPjiwVMElllLvEnv+4+8hOKJFiwRZfdLl+oCQEzHFtR3SbnvSFIJsBEn7zQrITlL91OtrNmm6j1nGs6cUi2zOXet98aZWsXB1p5FiM68JQzrq2crPgqVYNNzrxTJhZay7POgWKDmlm44ck5YOP3dtfkyCIGv63QmeXW+9IT6EWODrqFbaapXKCRS70FJLk2safXN0Hgqe3L+tv/vKYHqVCvsbFztnd9OEJVfDB+1IAQECAwEAAaMQMA4wDAYDVR0TAQH/BAIwADANBgkqhkiG9w0BAQsFAAOCAQEAUm+aIfaismCLvfNCwU1nT422c+lfYlQnY/VndsihksddXZvbTLb0WXZ0+6NBvI9q0ZOee65mr7kNGGyvR52nSDxDoDCXRhHK4yNUbl6LVJ7ZNibif3ItmK+GaHilJ1oG/mi8ucvyTT+BGBsHfvjbB+RLSVzr/t0exhhmVHy/buR54efvmolBuWFggsUa2qeP2mXWmUHW4GptmniLbIIYClGzbG0QIDutcSmxqoxwlywS2PJerwAxgdjx3gcv49ZCTnFfL+ZTp78dpu4XjXbI0BNymJXDomCj4lpQPuqWsVKWrJh99e+pptUbpSzsBaQxJQmA3V32YLFEprEqB00q0Q==",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "true",
        "display.on.consent.screen": "false",
        "saml_name_id_format": "email",
        "saml.onetimeuse.condition": "false",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "role_list"
      ],
      "optionalClientScopes": []
    },
    {
      "id": "213ea3ce-b036-405f-8abd-3ee08ff72857",
      "clientId": "realm-management",
      "name": "${client_realm-management}",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": true,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {},
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "cdf11dff-530a-4fd4-97b9-84e4d60ac21e",
      "clientId": "sa-cl1-reg-2",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "7ef011ab-1e39-4d57-9f23-3b389394b57f",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dcd989ce-2636-4d01-ba95-0fa20e02383f",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9d83df9b-abf7-4504-aac4-e7966f8a877c",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "dab9dd17-0d31-46c7-b313-aca61225dcd1",
      "clientId": "sa-cl5-custodian-1",
      "description": "Technical User for SD Hub Call to Custodian for SD signature (SPOC: Dmitrii)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "30897db9-574e-49ee-b968-ede77a6baf67",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "00879247-75ce-491f-abed-52a6a810f685",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bb69e2e4-312f-4447-946f-b51f3c7184c2",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles"
      ],
      "optionalClientScopes": [
        "microprofile-jwt"
      ]
    },
    {
      "id": "c07768b6-f49a-4c5c-bdda-4fdc81f46e49",
      "clientId": "sa-cl5-cx-1",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "463c2183-69f8-4676-bad6-4eeaeff3512d",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "836cf4e6-7654-4c84-b7f5-d07819543024",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c7a8afdf-bb7b-41b7-a0bb-b561ef266923",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "a7ae2ac2-1800-40f2-92b0-889cb93d3ebe",
      "clientId": "sa-cl6-cx-1",
      "description": "This is a technical user for aas-registry-internal (internal tests by Digital Twin / Semantic Hub)-",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "8d0debee-6ced-4bbd-8211-d0813569ea9c",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3ecec5dd-48fe-46d0-9489-76e768eab321",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "f3850b8a-0a33-4053-96d4-04a48f055275",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "1e8b03d3-d4f3-4b29-949a-4260def85751",
      "clientId": "sa-cl6-cx-10",
      "description": "2nd Technical user for AAI Registry connection to Traceability (Markus Kreuz)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "21d28aaf-1921-455d-a55b-c028fa7ba5ea",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "5883fd2a-d5f3-45a5-a437-9c1af976fa2e",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "4f91941a-e8b1-4406-825c-1005a33043f0",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d3d0eea1-db73-427c-b262-829fb36e9878",
      "clientId": "sa-cl6-cx-11",
      "description": "Technical user for AAI Registry connection to MaaS (Contact: Daniel Metz)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "e3d70828-60d8-4b0a-9615-309ace82baf8",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9a8b676a-11f2-44ec-8c30-c1e07357f220",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b54be54a-246f-4c25-9279-764e590824a3",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e25aa042-6318-4fff-a939-328d0d7ba386",
      "clientId": "sa-cl6-cx-12",
      "description": "Technical user for AAI Registry connection to Traceability (Florian Rusch)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "93714788-bd2b-4311-991b-cd373c05d024",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "29fbd341-94df-4144-944a-d80a9f2f3afb",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "52118695-f560-483f-aca5-e4a2ed5cdaf6",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2d7e9b76-8bd9-41b2-8823-5b7f5ec3cec6",
      "clientId": "sa-cl6-cx-13",
      "description": "Technical user for AAI Registry connection to Traceability (Proshanta, Henkel)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "7b0e4794-0126-4b40-a1fa-fe00e524e054",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0adc9695-f521-4036-9028-38cfd0e3115d",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "bffb6e01-d697-4091-9ec8-0e7fa435c2b7",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fae37447-4174-429b-91d2-b696b68287d7",
      "clientId": "sa-cl6-cx-2",
      "name": "",
      "description": "This is a technical user for Semantic Hub",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://catenaxintakssrv.germanywestcentral.cloudapp.azure.com/*",
        "http://localhost"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "deb3611f-4206-451c-b8e0-d1d6ddc7caa0",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "54ed3d77-0ca8-4a2c-8652-5865948ac1d6",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "e5b57306-c07a-4ebb-bede-5d220880d405",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "7c87b118-63d5-4f72-9772-1f4632a1b3fc",
      "clientId": "sa-cl6-cx-3",
      "description": "Technical user for AAI Registry connection to BMW data pipeline",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "426b3802-567e-4235-94cb-5cf4c1f1f748",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0b17c9ff-d20c-4425-8c63-36fabe5802f6",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "c6eaa3fd-bf8f-4ef4-8a6f-1629004b80c3",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "0ce4a2fa-c85a-4bd1-b571-5afe6a79ca6d",
      "clientId": "sa-cl6-cx-4",
      "description": "Technical user created for postman tests for traceability (Contact: M.Keidl, CTW: Joao)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "saml.assertion.signature": "false",
        "id.token.as.detached.signature": "false",
        "saml.multivalued.roles": "false",
        "saml.force.post.binding": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "require.pushed.authorization.requests": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "bd34d354-2e82-4987-803b-0e8209a8cc1b",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "46cd680e-ee4e-4511-ac76-a95851657ced",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "741c0ba1-543f-4dea-83df-b1735b2ed0e2",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c3e0182e-abb2-4451-8180-51538eaeb93a",
      "clientId": "sa-cl6-cx-5",
      "description": "Technical user created for postman tests for traceability (Contact: Clemens Braband)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "531faee9-5a4b-451a-909f-b9f603f48fc2",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6bff54b5-ed16-4ef3-9e94-73bfc39da7c4",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ee566510-db23-4569-ad1a-7691f0f12355",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "674ba68c-891f-4df6-9d11-1c48600f986f",
      "clientId": "sa-cl6-cx-6",
      "description": "Technical user for AAI Registry connection to BASF Data Service (Gabriele Eckhardt)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "8932692f-4aac-4874-8019-0325a487e78b",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "07557d98-31c4-48cc-ba12-93ac7938cad4",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "d8eff86d-fbe2-468f-a4a0-2ced8d0993e0",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "e5f00301-2b8d-4e01-8531-b4e7b22fece5",
      "clientId": "sa-cl6-cx-7",
      "description": "Technical user for AAI Registry connection to Traceability (Markus Kreuz)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "6073cb62-e81c-4e11-830a-a58b84c8fbef",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "594e782d-80ef-41bf-8332-d158498f22d3",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "3c7a3762-4c67-4a4c-9028-ce641e492062",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "fdaa99b6-c8e9-4521-a70c-4d535a1e573e",
      "clientId": "sa-cl6-cx-8",
      "description": "Technical user for AAI Registry connection to Traceability (Matthias Binzer) - testdata2edc",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "0ba4d9a3-bb4b-4667-afe4-3fd1c7638a97",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "eed9f43e-4464-40f3-a2fd-07a003ba93b2",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "29a0fd3f-c2b9-4ff8-8cb9-046bbfb02d98",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "c3af980d-b1f6-447a-ba96-5dacd52a7adf",
      "clientId": "sa-cl6-cx-9",
      "description": "Technical user for AAI Registry connection to IRS (Johannes Zahn)",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "e3dfef3a-abae-4bee-a6ff-2c6b0f91e22c",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "621a15c8-77ce-402e-95e3-85165f90ed81",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9d65811a-6f05-4bc8-9dd3-ec664ed87f42",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "f69006e1-e4a6-4237-b73b-89711c0934c2",
      "clientId": "sa-clx-cx-1",
      "description": "Technical User für SAP (Felix Ruecker) um auf BPN und Registry zuzugreifen",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "*"
      ],
      "webOrigins": [],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": true,
      "serviceAccountsEnabled": true,
      "publicClient": false,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "id.token.as.detached.signature": "false",
        "saml.assertion.signature": "false",
        "saml.force.post.binding": "false",
        "saml.multivalued.roles": "false",
        "saml.encrypt": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "exclude.session.state.from.auth.response": "false",
        "oidc.ciba.grant.enabled": "false",
        "saml.artifact.binding": "false",
        "backchannel.logout.session.required": "true",
        "client_credentials.use_refresh_token": "false",
        "saml_force_name_id_format": "false",
        "require.pushed.authorization.requests": "false",
        "saml.client.signature": "false",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "false",
        "display.on.consent.screen": "false",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "protocolMappers": [
        {
          "id": "eb5ed933-696d-4b51-a5e0-534da33028a3",
          "name": "Client Host",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientHost",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientHost",
            "jsonType.label": "String"
          }
        },
        {
          "id": "ace07ce7-da41-4a76-b6a0-8535eab2cc4a",
          "name": "Client ID",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientId",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientId",
            "jsonType.label": "String"
          }
        },
        {
          "id": "9ea6f463-9346-4650-8ecd-39298823c513",
          "name": "Client IP Address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usersessionmodel-note-mapper",
          "consentRequired": false,
          "config": {
            "user.session.note": "clientAddress",
            "userinfo.token.claim": "true",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "clientAddress",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "d5265cd8-d128-4dc9-8602-d49d1df0a86c",
      "clientId": "security-admin-console",
      "name": "${client_security-admin-console}",
      "rootUrl": "${authAdminUrl}",
      "baseUrl": "/admin/CX-Central/console/",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "redirectUris": [
        "/admin/CX-Central/console/*"
      ],
      "webOrigins": [
        "+"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": true,
      "frontchannelLogout": false,
      "protocol": "openid-connect",
      "attributes": {
        "pkce.code.challenge.method": "S256"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": false,
      "nodeReRegistrationTimeout": 0,
      "protocolMappers": [
        {
          "id": "12d9df9a-241b-4ec2-bafa-3f26ccaa1890",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        }
      ],
      "defaultClientScopes": [
        "web-origins",
        "roles",
        "profile",
        "email"
      ],
      "optionalClientScopes": [
        "address",
        "phone",
        "offline_access",
        "microprofile-jwt"
      ]
    },
    {
      "id": "2486e439-4fbd-4f53-bc02-aff9d0699e07",
      "clientId": "urn:uuid:7bd86018-d0a2-421b-9e00-b77bab0838b1",
      "name": "CPM App",
      "surrogateAuthRequired": false,
      "enabled": true,
      "alwaysDisplayInConsole": false,
      "clientAuthenticatorType": "client-secret",
      "secret": "**********",
      "redirectUris": [
        "https://impact.bmw.cloud/multipass/api/collectors/7bd86018-d0a2-421b-9e00-b77bab0838b1/saml/SSO"
      ],
      "webOrigins": [
        "https://impact.bmw.cloud"
      ],
      "notBefore": 0,
      "bearerOnly": false,
      "consentRequired": false,
      "standardFlowEnabled": true,
      "implicitFlowEnabled": false,
      "directAccessGrantsEnabled": false,
      "serviceAccountsEnabled": false,
      "publicClient": false,
      "frontchannelLogout": true,
      "protocol": "saml",
      "attributes": {
        "saml.force.post.binding": "true",
        "saml.multivalued.roles": "false",
        "oauth2.device.authorization.grant.enabled": "false",
        "backchannel.logout.revoke.offline.tokens": "false",
        "saml.server.signature.keyinfo.ext": "false",
        "use.refresh.tokens": "true",
        "saml.signing.certificate": "MIIE0zCCArugAwIBAgIEWSwjGzANBgkqhkiG9w0BAQsFADAbMRkwFwYDVQQDDBBpbXBhY3QuYm13LmNsb3VkMB4XDTIxMTEyNTEzMTkzMloXDTMxMTEyMzEzMjkzMlowGzEZMBcGA1UEAwwQaW1wYWN0LmJtdy5jbG91ZDCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAJr3kQjeWOd9bPBTGAlQpbrh4kDmweESAeu2kXPqtQkEaHjdIHbgQAE/J1BAxme0hB0RzeAV1h4rdg8m1UUx2jaZ/QPvwgggFaGcdykM2Ja/f/dnnm5P9Xi8DYRWR+UJy9Sa9gJwPfgCPWNwcXNKC2+xW/fubvjfEE8K040KqhPFrT5wOA6mbDohYBrGa4xcXrnNsts2dnU6ecXnlrgjYpYHL0cIxVRvtxJ49VgJRuWXCIDLqkogqm/FdHIcwMcy11GfM0O3JTRl+oNGyTYBHaFrwLOWmv3LggcBoAPIIz4tlsr0bMG29IW2snVIPL4x3NptehODwfcOiagfd+QNjAungmCugpoPYM78bxkKT/24LTg3lFYSqC/CGSkz4OQLEbwYUV/qrcNo2r3tQsD3JahCppH2zhvJSoko0XijVRyQ8Xh8hWWaj3ana89rCg7DztSQJmrM0YjYNngTnQgdsK0NVljy5tL7nLHpV/DQ0OmzW84C7uNtDDmwysGof89H6VeoovLhWbsqPhhcEapw0v7atpRWSge2Mc0Wh3kiHxmhHQ4tBDa37g/8U8Dhr+w+DmAzQPmRg6/joir/fpgF89ox7J+iONKV9M6JMtIlpIFKWdxL+NMeB1aC3D7cYW9+YSHmkqxX1xFWDs4JbFKqIZYaMkzEqpIz4CgVk+MYfdyFAgMBAAGjHzAdMBsGA1UdEQQUMBKCEGltcGFjdC5ibXcuY2xvdWQwDQYJKoZIhvcNAQELBQADggIBAFCOGx89nkHj2t0PbGuxmnYI5tCEtRuud4/hwZ4Z8kDS23c+2yO4VaQQhn2tYumHMm6mSeImQVUOQQtp+ltaP9k8va8qto3zfhBc6CPrent8Lxw6xn7j/G0EWryvtLy/G0/nDcb5z4+Yilfi49uJdNw1LftX4RvesVSaWqIhTkBbqly5oEysYgGDf7+eW9Af8febKAMbnvzO2yuKXa7XN2xNuVtvF+bBa2gbgIjyPp3mTMm2SGqacqlrTeGj1nFcvVRm03XKAd1IzPhhjGFCjS3lM37qNSrwG7QVTh0fEtStObspEc/rMuAG2huURYEVFsKTEOP3n9Mn4p3veqxVK751jdqxUCmsa942e/P+5JbijHROAmRUyNX/E5ZQh0bf9IGMPrLgVHz+NYddchNmMXa7eMHJZSHnkVvj+K7cXhUS4vN6GuP/WYpbPGCRO3jiVGnZ61ckT5IVUPs5t35k/btQDw+MIc3dJ2UGbuofmmdZ+BiNw3cmICkSTdVIRJvQUG7rsCGHWQ3TjsS/MXDmfmfu5wLD6uY7xOarirCPKwbqto0tICNcV6CFta1VO6Yj8tMaRpdG9MrGHmXNz+ms3H2fd4HyFaL/sxwv2uHW+f8R7YldYnVebTwjtoITSYgZHdJ8yDicKWEFsU1RRlFTbkdvuysyz0+GXKnJbwdpFnBY",
        "oidc.ciba.grant.enabled": "false",
        "backchannel.logout.session.required": "false",
        "saml.signature.algorithm": "RSA_SHA256",
        "client_credentials.use_refresh_token": "false",
        "saml.client.signature": "true",
        "require.pushed.authorization.requests": "false",
        "saml.assertion.signature": "true",
        "id.token.as.detached.signature": "false",
        "saml_single_logout_service_url_post": "https://impact.bmw.cloud/multipass/api/collectors/7bd86018-d0a2-421b-9e00-b77bab0838b1/saml/SingleLogout",
        "saml.encrypt": "true",
        "saml_assertion_consumer_url_post": "https://impact.bmw.cloud/multipass/api/collectors/7bd86018-d0a2-421b-9e00-b77bab0838b1/saml/SSO",
        "saml.server.signature": "true",
        "exclude.session.state.from.auth.response": "false",
        "saml.artifact.binding.identifier": "/ewlwAsHsIG1PkTPfKmGSGYGJio=",
        "saml_single_logout_service_url_redirect": "https://impact.bmw.cloud/multipass/api/collectors/7bd86018-d0a2-421b-9e00-b77bab0838b1/saml/SingleLogout",
        "saml.artifact.binding": "false",
        "saml_force_name_id_format": "false",
        "saml.encryption.certificate": "MIIE0zCCArugAwIBAgIEWSwjGzANBgkqhkiG9w0BAQsFADAbMRkwFwYDVQQDDBBpbXBhY3QuYm13LmNsb3VkMB4XDTIxMTEyNTEzMTkzMloXDTMxMTEyMzEzMjkzMlowGzEZMBcGA1UEAwwQaW1wYWN0LmJtdy5jbG91ZDCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAJr3kQjeWOd9bPBTGAlQpbrh4kDmweESAeu2kXPqtQkEaHjdIHbgQAE/J1BAxme0hB0RzeAV1h4rdg8m1UUx2jaZ/QPvwgggFaGcdykM2Ja/f/dnnm5P9Xi8DYRWR+UJy9Sa9gJwPfgCPWNwcXNKC2+xW/fubvjfEE8K040KqhPFrT5wOA6mbDohYBrGa4xcXrnNsts2dnU6ecXnlrgjYpYHL0cIxVRvtxJ49VgJRuWXCIDLqkogqm/FdHIcwMcy11GfM0O3JTRl+oNGyTYBHaFrwLOWmv3LggcBoAPIIz4tlsr0bMG29IW2snVIPL4x3NptehODwfcOiagfd+QNjAungmCugpoPYM78bxkKT/24LTg3lFYSqC/CGSkz4OQLEbwYUV/qrcNo2r3tQsD3JahCppH2zhvJSoko0XijVRyQ8Xh8hWWaj3ana89rCg7DztSQJmrM0YjYNngTnQgdsK0NVljy5tL7nLHpV/DQ0OmzW84C7uNtDDmwysGof89H6VeoovLhWbsqPhhcEapw0v7atpRWSge2Mc0Wh3kiHxmhHQ4tBDa37g/8U8Dhr+w+DmAzQPmRg6/joir/fpgF89ox7J+iONKV9M6JMtIlpIFKWdxL+NMeB1aC3D7cYW9+YSHmkqxX1xFWDs4JbFKqIZYaMkzEqpIz4CgVk+MYfdyFAgMBAAGjHzAdMBsGA1UdEQQUMBKCEGltcGFjdC5ibXcuY2xvdWQwDQYJKoZIhvcNAQELBQADggIBAFCOGx89nkHj2t0PbGuxmnYI5tCEtRuud4/hwZ4Z8kDS23c+2yO4VaQQhn2tYumHMm6mSeImQVUOQQtp+ltaP9k8va8qto3zfhBc6CPrent8Lxw6xn7j/G0EWryvtLy/G0/nDcb5z4+Yilfi49uJdNw1LftX4RvesVSaWqIhTkBbqly5oEysYgGDf7+eW9Af8febKAMbnvzO2yuKXa7XN2xNuVtvF+bBa2gbgIjyPp3mTMm2SGqacqlrTeGj1nFcvVRm03XKAd1IzPhhjGFCjS3lM37qNSrwG7QVTh0fEtStObspEc/rMuAG2huURYEVFsKTEOP3n9Mn4p3veqxVK751jdqxUCmsa942e/P+5JbijHROAmRUyNX/E5ZQh0bf9IGMPrLgVHz+NYddchNmMXa7eMHJZSHnkVvj+K7cXhUS4vN6GuP/WYpbPGCRO3jiVGnZ61ckT5IVUPs5t35k/btQDw+MIc3dJ2UGbuofmmdZ+BiNw3cmICkSTdVIRJvQUG7rsCGHWQ3TjsS/MXDmfmfu5wLD6uY7xOarirCPKwbqto0tICNcV6CFta1VO6Yj8tMaRpdG9MrGHmXNz+ms3H2fd4HyFaL/sxwv2uHW+f8R7YldYnVebTwjtoITSYgZHdJ8yDicKWEFsU1RRlFTbkdvuysyz0+GXKnJbwdpFnBY",
        "tls.client.certificate.bound.access.tokens": "false",
        "saml.authnstatement": "true",
        "display.on.consent.screen": "false",
        "saml_name_id_format": "email",
        "saml_signature_canonicalization_method": "http://www.w3.org/2001/10/xml-exc-c14n#",
        "saml.onetimeuse.condition": "false"
      },
      "authenticationFlowBindingOverrides": {},
      "fullScopeAllowed": true,
      "nodeReRegistrationTimeout": -1,
      "defaultClientScopes": [
        "role_list"
      ],
      "optionalClientScopes": []
    }
  ],
  "clientScopes": [
    {
      "id": "32795711-2e76-43f9-8138-3ce5b9eae1a2",
      "name": "catena",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "748924d3-243b-4d66-9708-89e258dffb2c",
          "name": "tenant-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "tenant",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "tenant",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b3dd05cc-7289-4a87-9625-af60b859d748",
          "name": "organisation-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "organisation",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "organisation",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1d94ee73-6981-486c-a2d8-2e2f857cd125",
          "name": "bpn-mapper",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "bpn",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "bpn",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "13834c57-9211-4e3e-b892-0632a3c15225",
      "name": "phone",
      "description": "OpenID Connect built-in scope: phone",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${phoneScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "6c0bfbc5-e3d7-45f9-a0bc-61e30225e22b",
          "name": "phone number verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumberVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "8868b283-df78-4c9a-b78e-1c29e4b9b61c",
          "name": "phone number",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "phoneNumber",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "phone_number",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "23e5acb7-2d8c-4bca-8565-36fb57ee7ee0",
      "name": "role_list",
      "description": "SAML role list",
      "protocol": "saml",
      "attributes": {
        "consent.screen.text": "${samlRoleListScopeConsentText}",
        "display.on.consent.screen": "true"
      },
      "protocolMappers": [
        {
          "id": "0adf14b5-a345-4d20-83cc-2a353c686161",
          "name": "role list",
          "protocol": "saml",
          "protocolMapper": "saml-role-list-mapper",
          "consentRequired": false,
          "config": {
            "single": "false",
            "attribute.nameformat": "Basic",
            "attribute.name": "Role"
          }
        }
      ]
    },
    {
      "id": "fc35a8f5-fedd-4b66-b3fa-9427e3947dc5",
      "name": "roles",
      "description": "OpenID Connect scope for add user roles to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${rolesScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "73a111cf-271c-4b9f-abca-e4894e29229d",
          "name": "realm roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "realm_access.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        },
        {
          "id": "c06270fe-f203-4c9b-92a8-ff716b81127a",
          "name": "audience resolve",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-audience-resolve-mapper",
          "consentRequired": false,
          "config": {}
        },
        {
          "id": "8e22da0e-f450-444a-80b4-824a69532949",
          "name": "client roles",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-client-role-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute": "foo",
            "access.token.claim": "true",
            "claim.name": "resource_access.${client_id}.roles",
            "jsonType.label": "String",
            "multivalued": "true"
          }
        }
      ]
    },
    {
      "id": "09dc23a3-1b9f-4b9d-aa87-e875f0f20655",
      "name": "address",
      "description": "OpenID Connect built-in scope: address",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${addressScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "0543fff7-3732-433b-8a24-d2784bba1501",
          "name": "address",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-address-mapper",
          "consentRequired": false,
          "config": {
            "user.attribute.formatted": "formatted",
            "user.attribute.country": "country",
            "user.attribute.postal_code": "postal_code",
            "userinfo.token.claim": "true",
            "user.attribute.street": "street",
            "id.token.claim": "true",
            "user.attribute.region": "region",
            "access.token.claim": "true",
            "user.attribute.locality": "locality"
          }
        }
      ]
    },
    {
      "id": "34a2f332-9752-4a7f-9d61-b4dbd40946b4",
      "name": "microprofile-jwt",
      "description": "Microprofile - JWT built-in scope",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "false"
      },
      "protocolMappers": [
        {
          "id": "955c2cb6-3abb-44d1-a3eb-9ebec0cf6094",
          "name": "upn",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "upn",
            "jsonType.label": "String"
          }
        },
        {
          "id": "48b4aa99-383c-4178-b966-c0ae710d8c21",
          "name": "groups",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-realm-role-mapper",
          "consentRequired": false,
          "config": {
            "multivalued": "true",
            "userinfo.token.claim": "true",
            "user.attribute": "foo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "groups",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "e24a7d06-7406-4b2f-854e-a5653f8b964f",
      "name": "profile",
      "description": "OpenID Connect built-in scope: profile",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${profileScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "987e5408-e6ef-4cd2-a51f-451fb7c0dc4e",
          "name": "locale",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "locale",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "locale",
            "jsonType.label": "String"
          }
        },
        {
          "id": "1a9bd37a-377a-48ae-9b95-a1c0c5f3fa08",
          "name": "username",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "username",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "preferred_username",
            "jsonType.label": "String"
          }
        },
        {
          "id": "dca5ee31-87cb-407b-aba6-d6c846e6a6b4",
          "name": "zoneinfo",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "zoneinfo",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "zoneinfo",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6af98429-3234-4f57-95c0-7df4209cb349",
          "name": "family name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "lastName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "family_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "b7e70ea0-1b54-469b-b818-dcb7d4657d9b",
          "name": "given name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "firstName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "given_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "02aff4ea-454c-41cf-8bf6-1bea1e933812",
          "name": "nickname",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "nickname",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "nickname",
            "jsonType.label": "String"
          }
        },
        {
          "id": "438a5f2c-727b-4ba2-82de-d5cf4b8d4daa",
          "name": "gender",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "gender",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "gender",
            "jsonType.label": "String"
          }
        },
        {
          "id": "70bf1855-c34a-4bd3-a06d-f3d62d91693b",
          "name": "middle name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "middleName",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "middle_name",
            "jsonType.label": "String"
          }
        },
        {
          "id": "0c9106a1-9c93-47bd-85b3-8607ba8485c2",
          "name": "full name",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-full-name-mapper",
          "consentRequired": false,
          "config": {
            "id.token.claim": "true",
            "access.token.claim": "true",
            "userinfo.token.claim": "true"
          }
        },
        {
          "id": "4386dc68-8dd3-4439-8c63-eabcdb92fd76",
          "name": "birthdate",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "birthdate",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "birthdate",
            "jsonType.label": "String"
          }
        },
        {
          "id": "78be8eb6-ca31-434c-8441-6abbfe553a22",
          "name": "profile",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "profile",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "profile",
            "jsonType.label": "String"
          }
        },
        {
          "id": "fb918735-48a7-4f96-8830-606815788dfb",
          "name": "picture",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "picture",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "picture",
            "jsonType.label": "String"
          }
        },
        {
          "id": "6e4e8483-7c58-4539-98d1-4b02ff5dc6f5",
          "name": "updated at",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "updatedAt",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "updated_at",
            "jsonType.label": "String"
          }
        },
        {
          "id": "58e59849-6457-4c8b-b713-2c5a008461c6",
          "name": "website",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-attribute-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "website",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "website",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "99ca536c-58c2-432f-904e-10926bbc207b",
      "name": "offline_access",
      "description": "OpenID Connect built-in scope: offline_access",
      "protocol": "openid-connect",
      "attributes": {
        "consent.screen.text": "${offlineAccessScopeConsentText}",
        "display.on.consent.screen": "true"
      }
    },
    {
      "id": "8a14f08a-0ba9-44ae-83bd-5a65b9d0fe8c",
      "name": "email",
      "description": "OpenID Connect built-in scope: email",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "true",
        "display.on.consent.screen": "true",
        "consent.screen.text": "${emailScopeConsentText}"
      },
      "protocolMappers": [
        {
          "id": "2c452702-a301-4cc7-b76c-619b23f44fa0",
          "name": "email verified",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "emailVerified",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email_verified",
            "jsonType.label": "boolean"
          }
        },
        {
          "id": "1e6f0566-fc33-4e1f-bf4e-686676fcde70",
          "name": "email",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-usermodel-property-mapper",
          "consentRequired": false,
          "config": {
            "userinfo.token.claim": "true",
            "user.attribute": "email",
            "id.token.claim": "true",
            "access.token.claim": "true",
            "claim.name": "email",
            "jsonType.label": "String"
          }
        }
      ]
    },
    {
      "id": "2629904c-d708-4072-9fe4-98e4a30c7dde",
      "name": "web-origins",
      "description": "OpenID Connect scope for add allowed web origins to the access token",
      "protocol": "openid-connect",
      "attributes": {
        "include.in.token.scope": "false",
        "display.on.consent.screen": "false",
        "consent.screen.text": ""
      },
      "protocolMappers": [
        {
          "id": "07ab75f1-40a3-4b2c-ae83-94dac6e529e2",
          "name": "allowed web origins",
          "protocol": "openid-connect",
          "protocolMapper": "oidc-allowed-origins-mapper",
          "consentRequired": false,
          "config": {}
        }
      ]
    }
  ],
  "defaultDefaultClientScopes": [
    "role_list",
    "email",
    "roles",
    "web-origins",
    "profile"
  ],
  "defaultOptionalClientScopes": [
    "offline_access",
    "address",
    "phone",
    "microprofile-jwt"
  ],
  "browserSecurityHeaders": {
    "contentSecurityPolicyReportOnly": "",
    "xContentTypeOptions": "nosniff",
    "xRobotsTag": "none",
    "xFrameOptions": "SAMEORIGIN",
    "contentSecurityPolicy": "frame-src 'self'; frame-ancestors 'self'; object-src 'none';",
    "xXSSProtection": "1; mode=block",
    "strictTransportSecurity": "max-age=31536000; includeSubDomains"
  },
  "smtpServer": {
    "password": "**********",
    "starttls": "true",
    "auth": "true",
    "port": "587",
    "host": "smtp.office365.com",
    "replyTo": "no-reply@catena-x.net",
    "from": "Notifications@catena-x.net",
    "ssl": "",
    "user": "Notifications@catena-x.net"
  },
  "loginTheme": "catenax-central",
  "eventsEnabled": true,
  "eventsListeners": [
    "jboss-logging"
  ],
  "enabledEventTypes": [
    "UPDATE_CONSENT_ERROR",
    "SEND_RESET_PASSWORD",
    "GRANT_CONSENT",
    "VERIFY_PROFILE_ERROR",
    "UPDATE_TOTP",
    "REMOVE_TOTP",
    "REVOKE_GRANT",
    "LOGIN_ERROR",
    "CLIENT_LOGIN",
    "RESET_PASSWORD_ERROR",
    "IMPERSONATE_ERROR",
    "CODE_TO_TOKEN_ERROR",
    "CUSTOM_REQUIRED_ACTION",
    "OAUTH2_DEVICE_CODE_TO_TOKEN_ERROR",
    "RESTART_AUTHENTICATION",
    "UPDATE_PROFILE_ERROR",
    "IMPERSONATE",
    "LOGIN",
    "UPDATE_PASSWORD_ERROR",
    "OAUTH2_DEVICE_VERIFY_USER_CODE",
    "CLIENT_INITIATED_ACCOUNT_LINKING",
    "TOKEN_EXCHANGE",
    "REGISTER",
    "LOGOUT",
    "AUTHREQID_TO_TOKEN",
    "DELETE_ACCOUNT_ERROR",
    "CLIENT_REGISTER",
    "IDENTITY_PROVIDER_LINK_ACCOUNT",
    "UPDATE_PASSWORD",
    "DELETE_ACCOUNT",
    "FEDERATED_IDENTITY_LINK_ERROR",
    "CLIENT_DELETE",
    "IDENTITY_PROVIDER_FIRST_LOGIN",
    "VERIFY_EMAIL",
    "CLIENT_DELETE_ERROR",
    "CLIENT_LOGIN_ERROR",
    "RESTART_AUTHENTICATION_ERROR",
    "REMOVE_FEDERATED_IDENTITY_ERROR",
    "EXECUTE_ACTIONS",
    "TOKEN_EXCHANGE_ERROR",
    "PERMISSION_TOKEN",
    "SEND_IDENTITY_PROVIDER_LINK_ERROR",
    "EXECUTE_ACTION_TOKEN_ERROR",
    "SEND_VERIFY_EMAIL",
    "OAUTH2_DEVICE_AUTH",
    "EXECUTE_ACTIONS_ERROR",
    "REMOVE_FEDERATED_IDENTITY",
    "OAUTH2_DEVICE_CODE_TO_TOKEN",
    "IDENTITY_PROVIDER_POST_LOGIN",
    "IDENTITY_PROVIDER_LINK_ACCOUNT_ERROR",
    "UPDATE_EMAIL",
    "OAUTH2_DEVICE_VERIFY_USER_CODE_ERROR",
    "REGISTER_ERROR",
    "REVOKE_GRANT_ERROR",
    "LOGOUT_ERROR",
    "UPDATE_EMAIL_ERROR",
    "EXECUTE_ACTION_TOKEN",
    "CLIENT_UPDATE_ERROR",
    "UPDATE_PROFILE",
    "AUTHREQID_TO_TOKEN_ERROR",
    "FEDERATED_IDENTITY_LINK",
    "CLIENT_REGISTER_ERROR",
    "SEND_IDENTITY_PROVIDER_LINK",
    "SEND_VERIFY_EMAIL_ERROR",
    "RESET_PASSWORD",
    "CLIENT_INITIATED_ACCOUNT_LINKING_ERROR",
    "OAUTH2_DEVICE_AUTH_ERROR",
    "UPDATE_CONSENT",
    "REMOVE_TOTP_ERROR",
    "VERIFY_EMAIL_ERROR",
    "SEND_RESET_PASSWORD_ERROR",
    "CLIENT_UPDATE",
    "IDENTITY_PROVIDER_POST_LOGIN_ERROR",
    "CUSTOM_REQUIRED_ACTION_ERROR",
    "UPDATE_TOTP_ERROR",
    "CODE_TO_TOKEN",
    "VERIFY_PROFILE",
    "GRANT_CONSENT_ERROR",
    "IDENTITY_PROVIDER_FIRST_LOGIN_ERROR"
  ],
  "adminEventsEnabled": true,
  "adminEventsDetailsEnabled": true,
  "identityProviders": [
    {
      "alias": "bmw-wen-oidc",
      "displayName": "BMW (INT)",
      "internalId": "d06619f8-7ec3-4b7e-a94e-d148afbacfd1",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "validateSignature": "true",
        "userInfoUrl": "https://auth-i.bmwgroup.com/auth/oauth2/realms/root/realms/internetb2xmfaonly/userinfo",
        "tokenUrl": "https://auth-i.bmwgroup.com/auth/oauth2/realms/root/realms/internetb2xmfaonly/access_token",
        "clientId": "96947c40-cf96-415f-8f54-d83bed2a9816",
        "jwksUrl": "https://auth-i.bmwgroup.com/auth/oauth2/realms/root/realms/internetb2xmfaonly/connect/jwk_uri",
        "backchannelSupported": "false",
        "useJwksUrl": "true",
        "authorizationUrl": "https://auth-i.bmwgroup.com/auth/oauth2/realms/root/realms/internetb2xmfaonly/authorize",
        "clientAuthMethod": "client_secret_basic",
        "logoutUrl": "https://auth-i.bmwgroup.com/auth/oauth2/realms/root/realms/internetb2xmfaonly/connect/endSession",
        "syncMode": "FORCE",
        "clientSecret": "**********",
        "guiOrder": "120",
        "defaultScope": "openid email profile organization"
      }
    },
    {
      "alias": "idp18",
      "displayName": "OpenResearch",
      "internalId": "3c44698c-ace2-430e-9ed9-b5723bccae52",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "hideOnLoginPage": "false",
        "validateSignature": "true",
        "clientId": "central-idp",
        "tokenUrl": "https://catenaxdev003akssrv.germanywestcentral.cloudapp.azure.com/iamsharedidp/auth/realms/idp18/protocol/openid-connect/token",
        "jwksUrl": "https://catenaxdev003akssrv.germanywestcentral.cloudapp.azure.com/iamsharedidp/auth/realms/idp18/protocol/openid-connect/certs",
        "authorizationUrl": "https://catenaxdev003akssrv.germanywestcentral.cloudapp.azure.com/iamsharedidp/auth/realms/idp18/protocol/openid-connect/auth",
        "clientAuthMethod": "private_key_jwt",
        "logoutUrl": "https://catenaxdev003akssrv.germanywestcentral.cloudapp.azure.com/iamsharedidp/auth/realms/idp18/protocol/openid-connect/logout",
        "clientAssertionSigningAlg": "RS256",
        "syncMode": "FORCE",
        "useJwksUrl": "true"
      }
    },
    {
      "alias": "siemensidpauth0",
      "displayName": "Siemens",
      "internalId": "95f74fcf-83c4-4485-b9d0-e187df602dfc",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "userInfoUrl": "https://siemens-df-005.eu.auth0.com/userinfo",
        "validateSignature": "true",
        "clientId": "PMS2BvjBRM05yjIKHCtmI7vofbzCjj0Y",
        "tokenUrl": "https://siemens-df-005.eu.auth0.com/oauth/token",
        "jwksUrl": "https://siemens-df-005.eu.auth0.com/.well-known/jwks.json",
        "issuer": "https://siemens-df-005.eu.auth0.com/",
        "useJwksUrl": "true",
        "authorizationUrl": "https://siemens-df-005.eu.auth0.com/authorize",
        "clientAuthMethod": "client_secret_basic",
        "syncMode": "FORCE",
        "clientSecret": "**********",
        "guiOrder": "150"
      }
    },
    {
      "alias": "sap-oidc",
      "displayName": "SAP",
      "internalId": "a8d31df9-1645-4355-83e2-a87815eca562",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "validateSignature": "true",
        "userInfoUrl": "https://au6f1kxob.accounts.ondemand.com/oauth2/userinfo",
        "tokenUrl": "https://au6f1kxob.accounts.ondemand.com/oauth2/token",
        "clientId": "28b00530-a876-40e0-94a9-e04c1dd7bb14",
        "jwksUrl": "https://au6f1kxob.accounts.ondemand.com/oauth2/certs",
        "issuer": "https://au6f1kxob.accounts.ondemand.com",
        "useJwksUrl": "true",
        "authorizationUrl": "https://au6f1kxob.accounts.ondemand.com/oauth2/authorize",
        "clientAuthMethod": "client_secret_basic",
        "logoutUrl": "https://au6f1kxob.accounts.ondemand.com/oauth2/logout",
        "syncMode": "FORCE",
        "clientSecret": "**********",
        "guiOrder": "140"
      }
    },
    {
      "alias": "CX-Test-Access",
      "internalId": "60e5d38d-c0e2-4ad0-b8b7-0ac98d56d6a7",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "validateSignature": "true",
        "userInfoUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/CX-Test-Access/protocol/openid-connect/userinfo",
        "tokenUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/CX-Test-Access/protocol/openid-connect/token",
        "clientId": "Central-IdP",
        "jwksUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/CX-Test-Access/protocol/openid-connect/certs",
        "issuer": "https://sharedidp.dev.demo.catena-x.net/auth/realms/CX-Test-Access",
        "useJwksUrl": "true",
        "authorizationUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/CX-Test-Access/protocol/openid-connect/auth",
        "clientAuthMethod": "client_secret_basic",
        "logoutUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/CX-Test-Access/protocol/openid-connect/logout",
        "syncMode": "IMPORT",
        "clientSecret": "**********"
      }
    },
    {
      "alias": "Company-1",
      "internalId": "90455c53-7a98-48c1-bf51-c84763087ebb",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "validateSignature": "true",
        "userInfoUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-1/protocol/openid-connect/userinfo",
        "tokenUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-1/protocol/openid-connect/token",
        "clientId": "Central-IdP",
        "jwksUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-1/protocol/openid-connect/certs",
        "issuer": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-1",
        "useJwksUrl": "true",
        "authorizationUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-1/protocol/openid-connect/auth",
        "clientAuthMethod": "client_secret_basic",
        "logoutUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-1/protocol/openid-connect/logout",
        "syncMode": "IMPORT",
        "clientSecret": "**********"
      }
    },
    {
      "alias": "Company-2",
      "internalId": "ab9d4e1e-023a-4877-9747-336d68ef71b6",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "validateSignature": "true",
        "userInfoUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-2/protocol/openid-connect/userinfo",
        "tokenUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-2/protocol/openid-connect/token",
        "clientId": "Central-IdP",
        "jwksUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-2/protocol/openid-connect/certs",
        "issuer": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-2",
        "useJwksUrl": "true",
        "authorizationUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-2/protocol/openid-connect/auth",
        "clientAuthMethod": "client_secret_basic",
        "logoutUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-2/protocol/openid-connect/logout",
        "syncMode": "IMPORT",
        "clientSecret": "**********"
      }
    },
    {
      "alias": "Company-3",
      "internalId": "5503ea02-cc4b-41ca-9598-88b718b8a500",
      "providerId": "keycloak-oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "first broker login",
      "config": {
        "validateSignature": "true",
        "userInfoUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-3/protocol/openid-connect/userinfo",
        "tokenUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-3/protocol/openid-connect/token",
        "clientId": "Central-IdP",
        "jwksUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-3/protocol/openid-connect/certs",
        "issuer": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-3",
        "useJwksUrl": "true",
        "authorizationUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-3/protocol/openid-connect/auth",
        "clientAuthMethod": "client_secret_basic",
        "logoutUrl": "https://sharedidp.dev.demo.catena-x.net/auth/realms/Company-3/protocol/openid-connect/logout",
        "syncMode": "IMPORT",
        "clientSecret": "**********"
      }
    },
    {
      "alias": "Mercedes-Benz",
      "displayName": "Mercedes-Benz",
      "internalId": "43d0c957-0273-46c1-bf37-031e9b25047d",
      "providerId": "oidc",
      "enabled": true,
      "updateProfileFirstLoginMode": "on",
      "trustEmail": false,
      "storeToken": false,
      "addReadTokenRoleOnCreate": false,
      "authenticateByDefault": false,
      "linkOnly": false,
      "firstBrokerLoginFlowAlias": "Login without auto user creation",
      "config": {
        "validateSignature": "true",
        "userInfoUrl": "https://sso-int.daimler.com/idp/userinfo.openid",
        "tokenUrl": "https://sso-int.daimler.com/as/token.oauth2",
        "clientId": "165177be-c24c-4c1a-997e-bae0df1cca74",
        "jwksUrl": "https://sso-int.daimler.com/pf/JWKS",
        "issuer": "https://sso-int.daimler.com",
        "useJwksUrl": "true",
        "authorizationUrl": "https://sso-int.daimler.com/as/authorization.oauth2",
        "clientAuthMethod": "client_secret_basic",
        "logoutUrl": "https://sso-int.daimler.com/idp/startSLO.ping",
        "syncMode": "IMPORT",
        "clientSecret": "**********",
        "guiOrder": "130"
      }
    }
  ],
  "identityProviderMappers": [
    {
      "id": "da1dd22a-7d1d-4d88-aa6e-64d5087161a4",
      "name": "tenant-mapper",
      "identityProviderAlias": "CX-Test-Access",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute.value": "CX-Test-New",
        "attribute": "tenant"
      }
    },
    {
      "id": "be411a52-4b7f-4d1b-ba5f-56e7ce87231c",
      "name": "username-mapper",
      "identityProviderAlias": "Company-1",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "6e8e0338-880e-444e-8819-1d23c3656663",
      "name": "tenant-mapper",
      "identityProviderAlias": "Company-3",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute.value": "company-3",
        "attribute": "tenant"
      }
    },
    {
      "id": "98b274c1-dd1e-4bac-82b1-1b6b28a752a5",
      "name": "organisation-mapper",
      "identityProviderAlias": "idp18",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute": "organisation"
      }
    },
    {
      "id": "75e7cf55-3a1f-499b-9525-3c3c921522c8",
      "name": "username mapper",
      "identityProviderAlias": "Company-3",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "4b857696-00fd-4ac1-b036-6735a7cb950c",
      "name": "username-mapper",
      "identityProviderAlias": "Mercedes-Benz",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "71b45fcc-bd40-4365-884e-b94aebec228f",
      "name": "organisation-mapper",
      "identityProviderAlias": "Company-3",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute.value": "company-3",
        "attribute": "organisation"
      }
    },
    {
      "id": "18feed35-af52-441f-a59a-82a33b583411",
      "name": "organisation-mapper",
      "identityProviderAlias": "sap-oidc",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "claims": "[]",
        "attribute.value": "SAP",
        "attribute": "organisation"
      }
    },
    {
      "id": "4840ae51-f121-49cb-ba35-490ebd46ac10",
      "name": "organisation-mapper",
      "identityProviderAlias": "Company-1",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute.value": "company-1",
        "attribute": "organisation"
      }
    },
    {
      "id": "f612da86-43e4-4aa1-a197-5a8db1814108",
      "name": "organisation-mapper",
      "identityProviderAlias": "bmw-wen-oidc",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute.value": "BMW",
        "attribute": "organisation"
      }
    },
    {
      "id": "8430ce5a-8f61-466e-a5a0-3b47af53a26e",
      "name": "username-mapper",
      "identityProviderAlias": "idp18",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "74471b8e-7b52-4977-8f52-6d388697c417",
      "name": "username mapper",
      "identityProviderAlias": "bmw-wen-oidc",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "ef7ccd65-e94f-4677-a805-e78e80b4cda3",
      "name": "username mapper",
      "identityProviderAlias": "siemensidpauth0",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "claims": "[]",
        "target": "LOCAL"
      }
    },
    {
      "id": "939857c9-18d0-4b74-b964-5bfc9a8e9f04",
      "name": "idp mapper",
      "identityProviderAlias": "bmw-wen-oidc",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "claims": "[]",
        "attribute.value": "bmw-wen-oidc",
        "attribute": "tenant"
      }
    },
    {
      "id": "55a09803-a20a-4100-bf23-1240bae3dd33",
      "name": "username-mapper",
      "identityProviderAlias": "Company-2",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "b2c4b4bc-7230-498a-818a-3fbf734906a4",
      "name": "organisation-mapper",
      "identityProviderAlias": "Company-2",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute.value": "company-2",
        "attribute": "organisation"
      }
    },
    {
      "id": "c15df945-a2a0-4c76-9790-b2aad53b1b95",
      "name": "organisation-mapper",
      "identityProviderAlias": "CX-Test-Access",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute.value": "CX-Test-Access",
        "attribute": "organisation"
      }
    },
    {
      "id": "c4bde4d2-4b06-49d6-bb44-0e15d26ba6a2",
      "name": "username mapper",
      "identityProviderAlias": "sap-oidc",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "42a3dc7b-d3b1-4ef4-8237-51b0f94aff18",
      "name": "username mapper",
      "identityProviderAlias": "CX-Test-Access",
      "identityProviderMapper": "oidc-username-idp-mapper",
      "config": {
        "template": "${ALIAS}.${CLAIM.sub}",
        "syncMode": "INHERIT",
        "target": "LOCAL"
      }
    },
    {
      "id": "20bc217e-9f07-4e4c-bb85-e8415a7598ff",
      "name": "organisation-mapper",
      "identityProviderAlias": "siemensidpauth0",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute.value": "Siemens",
        "attribute": "organisation"
      }
    },
    {
      "id": "e17097aa-e5c0-472f-af21-35674f7fd697",
      "name": "idp mapper",
      "identityProviderAlias": "siemensidpauth0",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "claims": "[]",
        "attribute.value": "siemensidpauth0",
        "attribute": "tenant"
      }
    },
    {
      "id": "736f3769-1f63-4ffa-ad90-d89ef342a8d3",
      "name": "tenant-mapper",
      "identityProviderAlias": "idp18",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute.value": "idp18",
        "attribute": "tenant"
      }
    },
    {
      "id": "7ed00ebd-e4b6-412c-a67f-a9ef12101e42",
      "name": "tenant-mapper",
      "identityProviderAlias": "Company-2",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute.value": "company-2",
        "attribute": "tenant"
      }
    },
    {
      "id": "08665f68-74fd-42e2-a26c-58a2482a050e",
      "name": "tenant-mapper",
      "identityProviderAlias": "Company-1",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "attribute.value": "company-1",
        "attribute": "tenant"
      }
    },
    {
      "id": "413da783-aed8-4099-9b77-e839ebd54606",
      "name": "tenant-mapper",
      "identityProviderAlias": "sap-oidc",
      "identityProviderMapper": "hardcoded-attribute-idp-mapper",
      "config": {
        "syncMode": "INHERIT",
        "claims": "[]",
        "attribute.value": "sap-oidc",
        "attribute": "tenant"
      }
    }
  ],
  "components": {
    "org.keycloak.services.clientregistration.policy.ClientRegistrationPolicy": [
      {
        "id": "ab25cbe7-60bc-49ed-aa4a-707f84a70893",
        "name": "Max Clients Limit",
        "providerId": "max-clients",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "max-clients": [
            "200"
          ]
        }
      },
      {
        "id": "277b586e-0b26-40e9-90d1-e76305d69a10",
        "name": "Consent Required",
        "providerId": "consent-required",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "552bd2e5-c656-4796-8d61-b87c3508aab5",
        "name": "Trusted Hosts",
        "providerId": "trusted-hosts",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "host-sending-registration-request-must-match": [
            "true"
          ],
          "client-uris-must-match": [
            "true"
          ]
        }
      },
      {
        "id": "de1bbb33-9e18-4fc1-9ea3-1fd8ad22eae9",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "oidc-usermodel-property-mapper",
            "saml-user-attribute-mapper",
            "saml-user-property-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-full-name-mapper",
            "saml-role-list-mapper",
            "oidc-address-mapper"
          ]
        }
      },
      {
        "id": "b521525f-30e3-4b93-b42b-8c0dd53fc3af",
        "name": "Full Scope Disabled",
        "providerId": "scope",
        "subType": "anonymous",
        "subComponents": {},
        "config": {}
      },
      {
        "id": "a4df1d6a-2c46-44f4-9d06-62eb9b754bab",
        "name": "Allowed Protocol Mapper Types",
        "providerId": "allowed-protocol-mappers",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allowed-protocol-mapper-types": [
            "saml-role-list-mapper",
            "oidc-full-name-mapper",
            "oidc-address-mapper",
            "oidc-usermodel-property-mapper",
            "saml-user-property-mapper",
            "oidc-usermodel-attribute-mapper",
            "oidc-sha256-pairwise-sub-mapper",
            "saml-user-attribute-mapper"
          ]
        }
      },
      {
        "id": "f7e25fe0-dfe5-451a-8f54-ceea0cf201b4",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "anonymous",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      },
      {
        "id": "d15d2dae-9c9c-4c7d-83f3-726f29194489",
        "name": "Allowed Client Scopes",
        "providerId": "allowed-client-templates",
        "subType": "authenticated",
        "subComponents": {},
        "config": {
          "allow-default-scopes": [
            "true"
          ]
        }
      }
    ],
    "org.keycloak.userprofile.UserProfileProvider": [
      {
        "id": "d0e8129a-4ba9-4c4c-8a9e-308f0f79083e",
        "providerId": "declarative-user-profile",
        "subComponents": {},
        "config": {}
      }
    ],
    "org.keycloak.keys.KeyProvider": [
      {
        "id": "2bd55ad0-2f32-40f3-9749-c2d422fb697d",
        "name": "hmac-generated",
        "providerId": "hmac-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "HS256"
          ]
        }
      },
      {
        "id": "676a20ad-a79d-4175-998a-672bf4826e92",
        "name": "rsa-enc-generated",
        "providerId": "rsa-enc-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ],
          "algorithm": [
            "RSA-OAEP"
          ]
        }
      },
      {
        "id": "50220023-09bf-443a-a8b3-f306279cbb5b",
        "name": "rsa-generated",
        "providerId": "rsa-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      },
      {
        "id": "a510d16e-c3f7-4a88-b853-625a2cd357b4",
        "name": "aes-generated",
        "providerId": "aes-generated",
        "subComponents": {},
        "config": {
          "priority": [
            "100"
          ]
        }
      }
    ]
  },
  "internationalizationEnabled": true,
  "supportedLocales": [
    "de",
    "en"
  ],
  "defaultLocale": "en",
  "authenticationFlows": [
    {
      "id": "f5a7574b-9956-48d7-b581-754dd7464fdb",
      "alias": "Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "ed864802-e1a9-4c0e-9f1b-10627e00fdb1",
      "alias": "Authentication Options",
      "description": "Authentication options.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "basic-auth",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "basic-auth-otp",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "a3d2ee40-9d8d-44d8-aac4-b87a35fee27a",
      "alias": "Browser - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "0ce39724-db9e-4323-aff6-40b33df52374",
      "alias": "Direct Grant - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "1a302419-7bdd-4128-a2c0-ad61a4398952",
      "alias": "First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "ed8b5e71-d222-4b7a-b6c6-1e868a98477d",
      "alias": "Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "5388ec8a-64aa-43fc-a131-72e80c4b4c93",
      "alias": "Login without auto user creation",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Login without auto user creation User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "d92f3b31-5618-439d-b7af-89baa512f79a",
      "alias": "Login without auto user creation Account verification options",
      "description": "Method with which to verity the existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-email-verification",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Login without auto user creation Verify Existing Account by Re-authentication",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "8b72ce2e-9f1b-440b-b1e4-e5f7d076ac4a",
      "alias": "Login without auto user creation First broker login - Conditional OTP",
      "description": "Flow to determine if the OTP is required for the authentication",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-otp-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "a51701ac-d205-4e5b-ab07-80c86a038f10",
      "alias": "Login without auto user creation Handle Existing Account",
      "description": "Handle what to do if there is existing account with same email/username like authenticated identity provider",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-confirm-link",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Login without auto user creation Account verification options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "f7a7dc37-0b50-4639-9b5f-79263c1a97f7",
      "alias": "Login without auto user creation User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Login without auto user creation Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "7c81ac11-8bd2-4562-907f-9346a3e5f1c2",
      "alias": "Login without auto user creation Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": false,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Login without auto user creation First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "9b29022c-aec9-4c76-8d90-50d3ddb0c700",
      "alias": "Reset - Conditional OTP",
      "description": "Flow to determine if the OTP should be reset or not. Set to REQUIRED to force.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "conditional-user-configured",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-otp",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "1d95ec74-b5df-4da9-8919-448681f47cf1",
      "alias": "User creation or linking",
      "description": "Flow for the existing/non-existing user alternatives",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "create unique user config",
          "authenticator": "idp-create-user-if-unique",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "flowAlias": "Handle Existing Account",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "3e067df1-ff11-4e68-8d64-fce8c561502d",
      "alias": "Verify Existing Account by Re-authentication",
      "description": "Reauthentication of existing account",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "idp-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "First broker login - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "2b77b8ed-4d57-4b0a-9128-bb711b2a61bb",
      "alias": "browser",
      "description": "browser based authentication",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-cookie",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "auth-spnego",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "identity-provider-redirector",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 25,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "flowAlias": "forms",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "d1543704-ccfd-4b8d-977f-c88b683f27cc",
      "alias": "clients",
      "description": "Base authentication for clients",
      "providerId": "client-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "client-secret",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-secret-jwt",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "client-x509",
          "authenticatorFlow": false,
          "requirement": "ALTERNATIVE",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "b85f4e6f-9336-439d-b676-ad949188520f",
      "alias": "direct grant",
      "description": "OpenID Connect Resource Owner Grant",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "direct-grant-validate-username",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "direct-grant-validate-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 30,
          "flowAlias": "Direct Grant - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "0a363d53-7e18-4a82-b96d-d2244300ad80",
      "alias": "docker auth",
      "description": "Used by Docker clients to authenticate against the IDP",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "docker-http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "1a8e2b2a-3d1a-4079-bb47-8c6ac61a0938",
      "alias": "first broker login",
      "description": "Actions taken after first broker login with identity provider account, which is not yet linked to any Keycloak account",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticatorConfig": "review profile config",
          "authenticator": "idp-review-profile",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "User creation or linking",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "3151a9af-d994-4904-9cc9-76a8b77fad3e",
      "alias": "forms",
      "description": "Username, password, otp and other auth forms.",
      "providerId": "basic-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "auth-username-password-form",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 20,
          "flowAlias": "Browser - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "c9ee5e8e-0a63-4302-a988-10d5d5789a45",
      "alias": "http challenge",
      "description": "An authentication flow based on challenge-response HTTP Authentication Schemes",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "no-cookie-redirect",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 20,
          "flowAlias": "Authentication Options",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "c89a70ee-c994-4ad4-acde-545e19aa97d2",
      "alias": "registration",
      "description": "registration flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-page-form",
          "authenticatorFlow": true,
          "requirement": "REQUIRED",
          "priority": 10,
          "flowAlias": "registration form",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "0ecb74dc-8ca6-4978-a10a-f3c3d1b0638b",
      "alias": "registration form",
      "description": "registration form",
      "providerId": "form-flow",
      "topLevel": false,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "registration-user-creation",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-profile-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 40,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-password-action",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 50,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "registration-recaptcha-action",
          "authenticatorFlow": false,
          "requirement": "DISABLED",
          "priority": 60,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    },
    {
      "id": "5c415cbb-96ba-4c4a-abc6-1e2a5da477ba",
      "alias": "reset credentials",
      "description": "Reset credentials for a user if they forgot their password or something",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "reset-credentials-choose-user",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-credential-email",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 20,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticator": "reset-password",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 30,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        },
        {
          "authenticatorFlow": true,
          "requirement": "CONDITIONAL",
          "priority": 40,
          "flowAlias": "Reset - Conditional OTP",
          "userSetupAllowed": false,
          "autheticatorFlow": true
        }
      ]
    },
    {
      "id": "cf314e1c-a1f8-4797-b8f1-50456ecb9d05",
      "alias": "saml ecp",
      "description": "SAML ECP Profile Authentication Flow",
      "providerId": "basic-flow",
      "topLevel": true,
      "builtIn": true,
      "authenticationExecutions": [
        {
          "authenticator": "http-basic-authenticator",
          "authenticatorFlow": false,
          "requirement": "REQUIRED",
          "priority": 10,
          "userSetupAllowed": false,
          "autheticatorFlow": false
        }
      ]
    }
  ],
  "authenticatorConfig": [
    {
      "id": "df6291e2-2df7-46e9-b538-6ce9fbc9b218",
      "alias": "create unique user config",
      "config": {
        "require.password.update.after.registration": "false"
      }
    },
    {
      "id": "2294cdc0-6f6c-493a-a7e0-d5d404beb91f",
      "alias": "review profile config",
      "config": {
        "update.profile.on.first.login": "missing"
      }
    }
  ],
  "requiredActions": [
    {
      "alias": "CONFIGURE_TOTP",
      "name": "Configure OTP",
      "providerId": "CONFIGURE_TOTP",
      "enabled": true,
      "defaultAction": false,
      "priority": 10,
      "config": {}
    },
    {
      "alias": "terms_and_conditions",
      "name": "Terms and Conditions",
      "providerId": "terms_and_conditions",
      "enabled": false,
      "defaultAction": false,
      "priority": 20,
      "config": {}
    },
    {
      "alias": "UPDATE_PASSWORD",
      "name": "Update Password",
      "providerId": "UPDATE_PASSWORD",
      "enabled": true,
      "defaultAction": false,
      "priority": 30,
      "config": {}
    },
    {
      "alias": "UPDATE_PROFILE",
      "name": "Update Profile",
      "providerId": "UPDATE_PROFILE",
      "enabled": true,
      "defaultAction": false,
      "priority": 40,
      "config": {}
    },
    {
      "alias": "VERIFY_EMAIL",
      "name": "Verify Email",
      "providerId": "VERIFY_EMAIL",
      "enabled": true,
      "defaultAction": false,
      "priority": 50,
      "config": {}
    },
    {
      "alias": "delete_account",
      "name": "Delete Account",
      "providerId": "delete_account",
      "enabled": false,
      "defaultAction": false,
      "priority": 60,
      "config": {}
    },
    {
      "alias": "update_user_locale",
      "name": "Update User Locale",
      "providerId": "update_user_locale",
      "enabled": true,
      "defaultAction": false,
      "priority": 1000,
      "config": {}
    }
  ],
  "browserFlow": "browser",
  "registrationFlow": "registration",
  "directGrantFlow": "direct grant",
  "resetCredentialsFlow": "reset credentials",
  "clientAuthenticationFlow": "clients",
  "dockerAuthenticationFlow": "docker auth",
  "attributes": {
    "cibaBackchannelTokenDeliveryMode": "poll",
    "cibaExpiresIn": "120",
    "cibaAuthRequestedUserHint": "login_hint",
    "oauth2DeviceCodeLifespan": "600",
    "clientOfflineSessionMaxLifespan": "0",
    "oauth2DevicePollingInterval": "5",
    "clientSessionIdleTimeout": "0",
    "userProfileEnabled": "false",
    "parRequestUriLifespan": "60",
    "clientSessionMaxLifespan": "0",
    "clientOfflineSessionIdleTimeout": "0",
    "cibaInterval": "5"
  },
  "keycloakVersion": "16.1.1",
  "userManagedAccessAllowed": false,
  "clientProfiles": {
    "profiles": []
  },
  "clientPolicies": {
    "policies": []
  }
}